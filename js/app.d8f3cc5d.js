(function(){"use strict";var e={1407:function(e,t,a){var o=a(5130),l=a(657),n=a(6768);const r={id:"app",class:"d-flex flex-column vh-100"},i={class:"d-flex flex-column overflow-hidden"};function s(e,t,a,o,l,s){const c=(0,n.g2)("router-view");return(0,n.uX)(),(0,n.CE)("div",r,[(0,n.Lk)("div",i,[(0,n.bF)(c)])])}var c=a(144),u={name:"App",components:{},setup(){const e=(0,c.KR)(!1),t=(0,c.KR)("載入中..."),a=(0,c.KR)(0),o=(0,c.KR)(!1),l=(0,c.KR)("");return{isLoading:e,loadingText:t,loadingProgress:a,showLoadingProgress:o,loadingSubText:l}}},p=a(1241);const d=(0,p.A)(u,[["render",s]]);var m=d,y=a(1387),g=a(4232);const f={id:"app",class:"d-flex flex-column vh-100"},h={key:0,class:"position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center",style:{"background-color":"rgba(0, 0, 0, 0.7)","z-index":"9999"}},v={class:"text-center my-bgcolor-white p-4 rounded shadow"},b={class:"d-flex justify-content-between align-items-center mb-3"},w={class:"d-flex align-items-center gap-2 my-4"},D={class:"d-flex gap-2 justify-content-end"},x=["disabled","title"],L={key:1,class:"position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center",style:{"background-color":"rgba(0, 0, 0, 0.7)","z-index":"9999"}},C={class:"text-center my-bgcolor-white p-4 rounded shadow"},k={class:"d-flex justify-content-between align-items-center mb-3"},N={class:"d-flex align-items-center gap-2 my-4"},I={class:"d-flex gap-2 justify-content-end"},T=["disabled"],$={class:"d-flex flex-column overflow-hidden"},E={key:0,class:"h-100"},F={key:1,class:"h-100 d-flex flex-column overflow-hidden"},O={class:"d-none d-xl-flex flex-row overflow-hidden h-100"},z={class:"d-flex d-xl-none flex-column overflow-hidden h-100"},P={class:"d-none d-xl-flex justify-content-between my-app-footer my-title-sm-white my-bgcolor-gray-800 p-2",ref:"appFooterRef"};function S(e,t,a,l,r,i){const s=(0,n.g2)("LoadingOverlay"),c=(0,n.g2)("router-view"),u=(0,n.g2)("LeftView"),p=(0,n.g2)("MiddleView"),d=(0,n.g2)("RightView"),m=(0,n.g2)("UpperView"),y=(0,n.g2)("ResponsiveLowerView");return(0,n.uX)(),(0,n.CE)("div",f,[(0,n.bF)(s,{isVisible:l.isAnyLayerLoading,loadingText:l.loadingText,progress:l.loadingProgress,showProgress:l.showLoadingProgress,subText:l.loadingSubText},null,8,["isVisible","loadingText","progress","showProgress","subText"]),l.showDistanceModal?((0,n.uX)(),(0,n.CE)("div",h,[(0,n.Lk)("div",v,[(0,n.Lk)("div",b,[t[27]||(t[27]=(0,n.Lk)("h5",{class:"my-title-md-black mb-0"},"分析範圍",-1)),(0,n.Lk)("button",{type:"button",class:"btn-close",onClick:t[0]||(t[0]=(...e)=>l.handleDistanceCancel&&l.handleDistanceCancel(...e)),"aria-label":"Close"})]),(0,n.Lk)("div",w,[t[28]||(t[28]=(0,n.Lk)("span",{class:"my-title-sm-gray text-nowrap"},"半徑",-1)),(0,n.bo)((0,n.Lk)("input",{type:"number",class:"form-control text-center my-font-size-md",id:"distanceInput","onUpdate:modelValue":t[1]||(t[1]=e=>l.distanceInput=e),placeholder:"例如：2.5",min:"0.1",step:"0.1",onKeyup:t[2]||(t[2]=(0,o.jR)(((...e)=>l.handleDistanceConfirm&&l.handleDistanceConfirm(...e)),["enter"]))},null,544),[[o.Jo,l.distanceInput]]),t[29]||(t[29]=(0,n.Lk)("span",{class:"my-title-sm-gray text-nowrap"},"公里",-1))]),(0,n.Lk)("div",D,[(0,n.Lk)("button",{type:"button",class:"btn my-font-size-sm my-btn-white",onClick:t[3]||(t[3]=(...e)=>l.handleDistanceCancel&&l.handleDistanceCancel(...e))},t[30]||(t[30]=[(0,n.Lk)("i",{class:"fas fa-times me-2"},null,-1),(0,n.eW)(" 取消 ")])),(0,n.Lk)("button",{type:"button",class:"btn my-font-size-sm my-btn-blue",onClick:t[4]||(t[4]=(...e)=>l.handleDistanceConfirm&&l.handleDistanceConfirm(...e)),disabled:!l.distanceInput||""===l.distanceInput,title:"距離輸入: "+l.distanceInput+", 長度: "+l.distanceInput.length+", 數值: "+parseFloat(l.distanceInput)},t[31]||(t[31]=[(0,n.Lk)("i",{class:"fas fa-check me-2"},null,-1),(0,n.eW)(" 確認 ")]),8,x)])])])):(0,n.Q3)("",!0),l.showIsochroneModal?((0,n.uX)(),(0,n.CE)("div",L,[(0,n.Lk)("div",C,[(0,n.Lk)("div",k,[t[32]||(t[32]=(0,n.Lk)("h5",{class:"my-title-md-black mb-0"},"車程時間",-1)),(0,n.Lk)("button",{type:"button",class:"btn-close",onClick:t[5]||(t[5]=(...e)=>l.handleIsochroneCancel&&l.handleIsochroneCancel(...e)),"aria-label":"Close"})]),(0,n.Lk)("div",N,[t[33]||(t[33]=(0,n.Lk)("span",{class:"my-title-sm-gray text-nowrap"},"時間",-1)),(0,n.bo)((0,n.Lk)("input",{type:"number",class:"form-control text-center my-font-size-md",id:"isochroneInput","onUpdate:modelValue":t[6]||(t[6]=e=>l.isochroneInput=e),placeholder:"例如：15",min:"1",step:"1",onKeyup:t[7]||(t[7]=(0,o.jR)(((...e)=>l.handleIsochroneConfirm&&l.handleIsochroneConfirm(...e)),["enter"]))},null,544),[[o.Jo,l.isochroneInput]]),t[34]||(t[34]=(0,n.Lk)("span",{class:"my-title-sm-gray text-nowrap"},"分鐘",-1))]),(0,n.Lk)("div",I,[(0,n.Lk)("button",{type:"button",class:"btn my-font-size-sm my-btn-white",onClick:t[8]||(t[8]=(...e)=>l.handleIsochroneCancel&&l.handleIsochroneCancel(...e))},t[35]||(t[35]=[(0,n.Lk)("i",{class:"fas fa-times me-2"},null,-1),(0,n.eW)(" 取消 ")])),(0,n.Lk)("button",{type:"button",class:"btn my-font-size-sm my-btn-blue",onClick:t[9]||(t[9]=(...e)=>l.handleIsochroneConfirm&&l.handleIsochroneConfirm(...e)),disabled:!l.isochroneInput||""===l.isochroneInput},t[36]||(t[36]=[(0,n.Lk)("i",{class:"fas fa-check me-2"},null,-1),(0,n.eW)(" 確認 ")]),8,T)])])])):(0,n.Q3)("",!0),(0,n.Lk)("div",$,["/"!==e.$route.path?((0,n.uX)(),(0,n.CE)("div",E,[(0,n.bF)(c)])):(0,n.Q3)("",!0),"/"===e.$route.path?((0,n.uX)(),(0,n.CE)("div",F,[(0,n.Lk)("div",O,[l.leftViewWidth>0?((0,n.uX)(),(0,n.CE)("div",{key:0,class:"h-100 overflow-y-auto overflow-x-hidden my-left-panel",style:(0,g.Tr)({width:l.leftViewWidthPx})},[(0,n.bF)(u)],4)):(0,n.Q3)("",!0),(0,n.Lk)("div",{class:(0,g.C4)(["my-resizer my-resizer-vertical my-resizer-left",{"my-dragging":l.isSidePanelDragging}]),onMousedown:t[10]||(t[10]=e=>l.startResize("left",e)),title:"拖曳調整左側面板寬度"},null,34),(0,n.bF)(p,{ref:"middlePanelRef",class:"d-flex flex-column overflow-hidden h-100 my-middle-panel",style:(0,g.Tr)([{"z-index":"1"},{width:l.mainPanelWidthPx,"min-width":"0px"}]),dynamicMainAreaHeight:l.calculatedMiddleViewHeight,activeUpperTab:l.activeUpperTab,activeBottomTab:l.activeBottomTab,mainPanelWidth:l.mainPanelWidth,showTainanLayer:l.showTainanLayer,selectedFilter:l.selectedFilter,zoomLevel:l.zoomLevel,currentCoords:l.currentCoords,activeMarkers:l.activeMarkers,isLoadingData:l.isAnyLayerLoading,isSidePanelDragging:l.isSidePanelDragging,"onUpdate:activeUpperTab":t[11]||(t[11]=e=>l.activeUpperTab=e),"onUpdate:activeBottomTab":t[12]||(t[12]=e=>l.activeBottomTab=e),"onUpdate:zoomLevel":t[13]||(t[13]=e=>l.zoomLevel=e),"onUpdate:currentCoords":t[14]||(t[14]=e=>l.currentCoords=e),"onUpdate:activeMarkers":t[15]||(t[15]=e=>l.activeMarkers=e),onResetView:l.resetView,onHighlightOnMap:l.handleHighlight,onHighlightFeature:l.handleHighlight,onFeatureSelected:l.handleFeatureSelected,onOpenDistanceModal:l.openDistanceModal,onOpenIsochroneModal:l.openIsochroneModal},null,8,["style","dynamicMainAreaHeight","activeUpperTab","activeBottomTab","mainPanelWidth","showTainanLayer","selectedFilter","zoomLevel","currentCoords","activeMarkers","isLoadingData","isSidePanelDragging","onResetView","onHighlightOnMap","onHighlightFeature","onFeatureSelected","onOpenDistanceModal","onOpenIsochroneModal"]),(0,n.Lk)("div",{class:(0,g.C4)(["my-resizer my-resizer-vertical my-resizer-right",{"my-dragging":l.isSidePanelDragging}]),onMousedown:t[16]||(t[16]=e=>l.startResize("right",e)),title:"拖曳調整右側面板寬度"},null,34),l.rightViewWidth>0?((0,n.uX)(),(0,n.CE)("div",{key:1,class:"h-100 overflow-auto",style:(0,g.Tr)({width:l.rightViewWidthPx})},[(0,n.bF)(d,{activeRightTab:l.activeRightTab,activeMarkers:l.activeMarkers,rightViewWidth:l.rightViewWidth,"onUpdate:activeRightTab":t[17]||(t[17]=e=>l.activeRightTab=e),onHighlightFeature:l.handleHighlight,"current-coords":l.currentCoords},null,8,["activeRightTab","activeMarkers","rightViewWidth","onHighlightFeature","current-coords"])],4)):(0,n.Q3)("",!0)]),(0,n.Lk)("div",z,[l.mobileBottomViewHeight<100?((0,n.uX)(),(0,n.CE)("div",{key:0,class:"flex-shrink-0 overflow-hidden d-flex flex-column",style:(0,g.Tr)({height:100-l.mobileBottomViewHeight+"vh"})},[((0,n.uX)(),(0,n.Wv)(m,{ref:"mobileUpperViewRef",key:l.mobileMapKey,activeUpperTab:l.activeUpperTab,mainPanelWidth:100,contentHeight:(100-l.mobileBottomViewHeight)*e.windowHeight*.01,showTainanLayer:l.showTainanLayer,selectedFilter:l.selectedFilter,zoomLevel:l.zoomLevel,isPanelDragging:l.isVerticalDragging,activeMarkers:l.activeMarkers,"onUpdate:activeUpperTab":t[18]||(t[18]=e=>l.activeUpperTab=e),"onUpdate:zoomLevel":t[19]||(t[19]=e=>l.zoomLevel=e),"onUpdate:currentCoords":t[20]||(t[20]=e=>l.currentCoords=e),"onUpdate:activeMarkers":t[21]||(t[21]=e=>l.activeMarkers=e),onFeatureSelected:l.handleFeatureSelected,onOpenDistanceModal:l.openDistanceModal,onOpenIsochroneModal:l.openIsochroneModal},null,8,["activeUpperTab","contentHeight","showTainanLayer","selectedFilter","zoomLevel","isPanelDragging","activeMarkers","onFeatureSelected","onOpenDistanceModal","onOpenIsochroneModal"]))],4)):(0,n.Q3)("",!0),l.mobileBottomViewHeight>0&&l.mobileBottomViewHeight<100?((0,n.uX)(),(0,n.CE)("div",{key:1,class:(0,g.C4)(["my-resizer my-resizer-horizontal my-resizer-middle",{"my-dragging":l.isVerticalDragging}]),onMousedown:t[22]||(t[22]=(...e)=>l.startVerticalResize&&l.startVerticalResize(...e)),onTouchstart:t[23]||(t[23]=(...e)=>l.startVerticalResize&&l.startVerticalResize(...e)),title:"拖曳調整底部面板高度"},null,34)):(0,n.Q3)("",!0),l.mobileBottomViewHeight>0?((0,n.uX)(),(0,n.CE)("div",{key:2,class:"flex-shrink-0 overflow-hidden",style:(0,g.Tr)({height:l.mobileBottomViewHeight+"vh"})},[(0,n.bF)(y,{activeTab:l.activeLowerTab,activeRightTab:l.activeRightTab,activeBottomTab:l.activeBottomTab,"onUpdate:activeTab":t[24]||(t[24]=e=>l.activeLowerTab=e),"onUpdate:activeRightTab":t[25]||(t[25]=e=>l.activeRightTab=e),"onUpdate:activeBottomTab":t[26]||(t[26]=e=>l.activeBottomTab=e),onHighlightOnMap:l.handleHighlight,onHighlightFeature:l.handleHighlight},null,8,["activeTab","activeRightTab","activeBottomTab","onHighlightOnMap","onHighlightFeature"])],4)):(0,n.Q3)("",!0)])])):(0,n.Q3)("",!0)]),(0,n.Lk)("footer",P,t[37]||(t[37]=[(0,n.Lk)("small",null,"臺灣大學地理環境資源學系",-1),(0,n.Lk)("small",null,"2025",-1)]),512)])}a(8111),a(116),a(3579),a(4114),a(2489),a(7588),a(1701),a(8237),a(7642),a(8004),a(3853),a(5876),a(2475),a(5024),a(1698);var M=a(3198);function R(e){const t=e.toLowerCase();return t.includes("住")||t.includes("宅")?t.includes("住1")||t.includes("第一類")?"rgba(255, 178, 102, 0.8)":t.includes("住2")?"rgba(255, 152, 51, 0.8)":t.includes("住3")?"rgba(255, 128, 25, 0.8)":t.includes("住4")?"rgba(230, 108, 15, 0.8)":t.includes("住6")?"rgba(204, 85, 0, 0.8)":t.includes("住商")?"rgba(255, 204, 153, 0.8)":t.includes("第二類")?"rgba(255, 152, 51, 0.8)":t.includes("第三類")?"rgba(255, 128, 25, 0.8)":"rgba(255, 178, 102, 0.8)":t.includes("商")?t.includes("商1")?"rgba(102, 178, 255, 0.8)":t.includes("商2")?"rgba(51, 152, 255, 0.8)":t.includes("商3")?"rgba(25, 128, 255, 0.8)":t.includes("商4")?"rgba(15, 108, 230, 0.8)":t.includes("商特")?"rgba(153, 204, 255, 0.8)":"rgba(102, 178, 255, 0.8)":t.includes("工")?t.includes("工2")?"rgba(150, 150, 150, 0.8)":t.includes("工3")?"rgba(120, 120, 120, 0.8)":"rgba(180, 180, 180, 0.8)":t.includes("公園")||t.includes("綠地")||t.includes("風景")||t.includes("保護")||t.includes("國家公園")?t.includes("公園綠地")?"rgba(102, 204, 102, 0.8)":t.includes("風景")?"rgba(76, 175, 76, 0.8)":t.includes("保護")?"rgba(51, 153, 51, 0.8)":t.includes("國家公園")?"rgba(25, 128, 25, 0.8)":"rgba(102, 204, 102, 0.8)":t.includes("交通")||t.includes("停車")||t.includes("鐵路")||t.includes("機場")||t.includes("高速公路")?t.includes("停車")?"rgba(153, 102, 204, 0.8)":t.includes("交通")?"rgba(128, 77, 179, 0.8)":t.includes("鐵路")?"rgba(102, 51, 153, 0.8)":t.includes("機場")?"rgba(77, 26, 128, 0.8)":t.includes("高速公路")?"rgba(51, 0, 102, 0.8)":"rgba(128, 77, 179, 0.8)":t.includes("學校")||t.includes("機關")||t.includes("醫院")||t.includes("市場")||t.includes("廣場")?t.includes("學校")?"rgba(255, 204, 102, 0.8)":t.includes("機關")?"rgba(255, 187, 51, 0.8)":t.includes("醫院")?"rgba(255, 170, 0, 0.8)":t.includes("市場")?"rgba(230, 153, 0, 0.8)":t.includes("廣場")?"rgba(204, 136, 0, 0.8)":"rgba(255, 204, 102, 0.8)":t.includes("墓地")||t.includes("古蹟")||t.includes("娛樂")?t.includes("墓地")?"rgba(179, 77, 77, 0.8)":t.includes("古蹟")?"rgba(153, 51, 51, 0.8)":t.includes("娛樂")?"rgba(204, 102, 102, 0.8)":"rgba(179, 77, 77, 0.8)":t.includes("行水")||t.includes("堤防")||t.includes("污水")||t.includes("垃圾")||t.includes("自來水")?"rgba(102, 204, 204, 0.8)":t.includes("加油")||t.includes("儲油")||t.includes("變電")||t.includes("煤氣")?"rgba(204, 102, 153, 0.8)":t.includes("農業")?"rgba(153, 255, 153, 0.8)":"rgba(200, 200, 200, 0.8)"}async function A(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"行政區":i.indexOf("行政區"),"里別":i.indexOf("里別"),"據點名稱":i.indexOf("據點名稱"),"據點類型":i.indexOf("據點類型"),"據點地址":i.indexOf("據點地址"),"聯絡電話":i.indexOf("聯絡電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"行政區":o[s.行政區],"里別":o[s.里別],"據點名稱":o[s.據點名稱],"據點類型":o[s.據點類型],"據點地址":o[s.據點地址],"聯絡電話":o[s.聯絡電話]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"據點名稱":o[s.據點名稱],"據點地址":o[s.據點地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.據點名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.據點地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function _(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"編號":i.indexOf("編號"),"據點名稱":i.indexOf("據點名稱"),"行政區":i.indexOf("行政區"),"里別":i.indexOf("里別"),"據點地址":i.indexOf("據點地址"),"電話":i.indexOf("電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"編號":o[s.編號],"據點名稱":o[s.據點名稱],"行政區":o[s.行政區],"里別":o[s.里別],"據點地址":o[s.據點地址],"電話":o[s.電話]},u={name:o[s.據點名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"據點名稱":o[s.據點名稱],"據點地址":o[s.據點地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.據點名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.據點地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function V(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"編號":i.indexOf("編號"),"據點名稱":i.indexOf("據點名稱"),"行政區":i.indexOf("行政區"),"里別":i.indexOf("里別"),"據點地址":i.indexOf("據點地址"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"編號":o[s.編號],"據點名稱":o[s.據點名稱],"行政區":o[s.行政區],"里別":o[s.里別],"據點地址":o[s.據點地址]},u={name:o[s.據點名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"據點名稱":o[s.據點名稱],"據點地址":o[s.據點地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.據點名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.據點地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function J(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"編號":i.indexOf("編號"),"屬性":i.indexOf("屬性"),"機構名稱":i.indexOf("機構名稱"),"區域別":i.indexOf("區域別"),"地址":i.indexOf("地址"),"電話":i.indexOf("電話"),"收容對象":i.indexOf("收容對象"),"核定床數_核定總床位數":i.indexOf("核定床數-核定總床位數"),"核定床數_長照床數":i.indexOf("核定床數-長照床數"),"核定床數_養護床數":i.indexOf("核定床數-養護床數"),"核定床數_失智床數":i.indexOf("核定床數-失智床數"),"核定床數_安養床數":i.indexOf("核定床數-安養床數"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"編號":o[s.編號],"屬性":o[s.屬性],"機構名稱":o[s.機構名稱],"區域別":o[s.區域別],"地址":o[s.地址],"電話":o[s.電話],"收容對象":o[s.收容對象],"核定床數_核定總床位數":o[s.核定床數_核定總床位數],"核定床數_長照床數":o[s.核定床數_長照床數],"核定床數_養護床數":o[s.核定床數_養護床數],"核定床數_失智床數":o[s.核定床數_失智床數],"核定床數_安養床數":o[s.核定床數_安養床數]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"地址":o[s.地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function H(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"單位名稱":i.indexOf("單位名稱"),"行政區":i.indexOf("行政區"),"服務區域":i.indexOf("服務區域"),"服務地址_聯絡電話":i.indexOf("服務地址/聯絡電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"單位名稱":o[s.單位名稱],"行政區":o[s.行政區],"服務區域":o[s.服務區域],"服務地址_聯絡電話":o[s.服務地址_聯絡電話]},u={name:o[s.單位名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"單位名稱":o[s.單位名稱],"服務地址_聯絡電話":o[s.服務地址_聯絡電話]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.單位名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.服務地址_聯絡電話;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function W(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"開放床數":i.indexOf("開放床數"),"地址":i.indexOf("地址"),"電話":i.indexOf("電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"開放床數":o[s.開放床數],"地址":o[s.地址],"電話":o[s.電話]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"地址":o[s.地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function j(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"立案日期":i.indexOf("立案日期"),"評鑑資訊":i.indexOf("評鑑資訊"),"地址":i.indexOf("地址"),"電話":i.indexOf("電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"開放床數":o[s.開放床數],"立案日期":o[s.立案日期],"評鑑資訊":o[s.評鑑資訊],"地址":o[s.地址],"電話":o[s.電話]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"地址":o[s.地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function B(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"服務區別":i.indexOf("服務區別"),"郵遞區號":i.indexOf("郵遞區號"),"機構服務地址":i.indexOf("機構(服務)地址"),"聯絡電話":i.indexOf("聯絡電話"),"聯絡窗口":i.indexOf("聯絡窗口"),"住宿式短照服務":i.indexOf("住宿式短照服務(SC05)"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"服務區別":o[s.服務區別],"郵遞區號":o[s.郵遞區號],"機構服務地址":o[s.機構服務地址],"聯絡電話":o[s.聯絡電話],"聯絡窗口":o[s.聯絡窗口],"住宿式短照服務":o[s.住宿式短照服務]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"機構服務地址":o[s.機構服務地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.機構服務地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function X(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"服務區別":i.indexOf("服務區別"),"郵遞區號":i.indexOf("郵遞區號"),"機構服務地址":i.indexOf("機構(服務)地址"),"聯絡電話":i.indexOf("聯絡電話"),"聯絡窗口":i.indexOf("聯絡窗口"),"住宿式短照服務":i.indexOf("住宿式短照服務(SC05)"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"服務區別":o[s.服務區別],"郵遞區號":o[s.郵遞區號],"機構服務地址":o[s.機構服務地址],"聯絡電話":o[s.聯絡電話],"聯絡窗口":o[s.聯絡窗口],"住宿式短照服務":o[s.住宿式短照服務]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"機構服務地址":o[s.機構服務地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.機構服務地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function K(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"服務區別":i.indexOf("服務區別"),"郵遞區號":i.indexOf("郵遞區號"),"機構服務地址":i.indexOf("機構(服務)地址"),"聯絡電話":i.indexOf("聯絡電話"),"聯絡窗口":i.indexOf("聯絡窗口"),"巷弄長照站短照服務":i.indexOf("巷弄長照站短照服務(SC07)"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"服務區別":o[s.服務區別],"郵遞區號":o[s.郵遞區號],"機構服務地址":o[s.機構服務地址],"聯絡電話":o[s.聯絡電話],"聯絡窗口":o[s.聯絡窗口],"巷弄長照站短照服務":o[s.巷弄長照站短照服務]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"機構服務地址":o[s.機構服務地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.機構服務地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function U(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"序號":i.indexOf("序號"),"機構名稱":i.indexOf("機構名稱"),"服務區別":i.indexOf("服務區別"),"郵遞區號":i.indexOf("郵遞區號"),"機構服務地址":i.indexOf("機構(服務)地址"),"聯絡電話":i.indexOf("聯絡電話"),"聯絡窗口":i.indexOf("聯絡窗口"),GA03:i.indexOf("GA03"),GA04:i.indexOf("GA04"),GA06:i.indexOf("GA06"),SC03:i.indexOf("SC03"),SC04:i.indexOf("SC04"),SC06:i.indexOf("SC06"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"序號":o[s.序號],"機構名稱":o[s.機構名稱],"服務區別":o[s.服務區別],"郵遞區號":o[s.郵遞區號],"機構服務地址":o[s.機構服務地址],"聯絡電話":o[s.聯絡電話],"聯絡窗口":o[s.聯絡窗口],GA03:o[s.GA03],GA04:o[s.GA04],GA06:o[s.GA06],SC03:o[s.SC03],SC04:o[s.SC04],SC06:o[s.SC06]},u={name:o[s.機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"機構名稱":o[s.機構名稱],"機構服務地址":o[s.機構服務地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.機構服務地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function G(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"醫療院所":i.indexOf("醫療院所"),"縣市":i.indexOf("縣市"),"鄉鎮市區":i.indexOf("鄉鎮市區"),"地址":i.indexOf("地址"),"電話":i.indexOf("電話"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"醫療院所":o[s.醫療院所],"縣市":o[s.縣市],"鄉鎮市區":o[s.鄉鎮市區],"地址":o[s.地址],"電話":o[s.電話]},u={name:o[s.醫療院所]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"醫療院所":o[s.醫療院所],"地址":o[s.地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.醫療院所],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.鄉鎮市區;t&&(p[t]=(p[t]||0)+1)}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function Q(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"醫事機構代碼":i.indexOf("醫事機構代碼"),"醫事機構名稱":i.indexOf("醫事機構名稱"),"醫事機構種類":i.indexOf("醫事機構種類"),"電話":i.indexOf("電話"),"地址":i.indexOf("地址"),"分區業務組":i.indexOf("分區業務組"),"特約類別":i.indexOf("特約類別"),"服務項目":i.indexOf("服務項目"),"診療科別":i.indexOf("診療科別"),"終止合約或歇業日期":i.indexOf("終止合約或歇業日期"),"固定看診時段":i.indexOf("固定看診時段"),"備註":i.indexOf("備註"),"縣市別代碼":i.indexOf("縣市別代碼"),"合約起日":i.indexOf("合約起日"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"醫事機構代碼":o[s.醫事機構代碼],"醫事機構名稱":o[s.醫事機構名稱],"醫事機構種類":o[s.醫事機構種類],"電話":o[s.電話],"地址":o[s.地址],"分區業務組":o[s.分區業務組],"特約類別":o[s.特約類別],"服務項目":o[s.服務項目],"診療科別":o[s.診療科別],"終止合約或歇業日期":o[s.終止合約或歇業日期],"固定看診時段":o[s.固定看診時段],"備註":o[s.備註],"縣市別代碼":o[s.縣市別代碼],"合約起日":o[s.合約起日]},u={name:o[s.醫事機構名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"醫事機構名稱":o[s.醫事機構名稱],"地址":o[s.地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.醫事機構名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function Y(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.json();n.features.forEach((e=>{const t=e.properties,o=6371,l=M.Vjx(e)*Math.pow(o,2);t.area=l;const n=parseFloat(t[a]);let r=0;l>0&&!isNaN(n)&&n>0&&(r=n/l),t.value=r}));let r=0,i=0;const s=n.features.map((e=>e.properties.value)).filter((e=>!isNaN(e)&&isFinite(e)));s.length>0&&(r=M.jkA(s),i=M.T9B(s));const c=5,u=M.y17(c).map((e=>M.dM(e/(c-1)))),p=(i-r)/c,d=M.y17(1,c).map((e=>Math.round(r+e*p))),m=M.c3b().domain(d).range(u);n.features.forEach(((o,l)=>{const n=o.properties;n.id=l+1,n.layerId=t,n.layerName=e.layerName,n.name=`${n.COUNTY}${n.TOWN}${n.VILLAGE}`,n.color="var(--my-color-white)",n.fillColor=m(n.value);const r={"里名":n.name,"人口密度":`${n.value.toFixed(1)} 人/km²`,[a]:n[a],"面積(km²)":n.area.toFixed(3),...n},i={"里名":n.name,"人口密度":`${n.value.toFixed(1)} 人/km²`},s={"#":n.id,color:m(n.value),"里名":n.name,[a]:n[a],"人口密度 (人/km²)":n.value.toFixed(1)};n.propertyData=r,n.popupData=i,n.tableData=s}));const y=n.features.map((e=>({...e.properties.tableData}))),g={totalCount:n.features.length},f=u.map(((e,t)=>{let a="",o=[];const l=e=>Math.round(e).toLocaleString();if(0===t){const e=d[0];a=`< ${l(e)}`,o=[null,e]}else if(t===u.length-1){const e=d[d.length-1];a=`> ${l(e)}`,o=[e,null]}else{const e=d[t-1],n=d[t];a=`${l(e)} - ${l(n)}`,o=[e,n]}return{color:e,label:`${a} (人/km²)`,extent:o}}));return{geoJsonData:n,tableData:y,summaryData:g,legendData:f}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}async function q(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=a||null;console.log(l);const n=await fetch(o);if(!n.ok)throw console.error("HTTP 錯誤:",{status:n.status,statusText:n.statusText,url:n.url}),new Error(`HTTP error! status: ${n.status}`);const r=await n.json();let i=0,s=0;const c=r.features.map((e=>parseFloat(e.properties[a]))).filter((e=>!isNaN(e)));i=M.jkA(c),s=M.T9B(c);const u=M.exT().domain([i,s]).interpolator(M.dM);r.features.forEach(((o,l)=>{o.properties.id=l+1,o.properties.layerId=t,o.properties.layerName=e.layerName,o.properties.name=o.properties.FULL,o.properties.value=parseFloat(o.properties[a]),o.properties.color="var(--my-color-white)",o.properties.fillColor=u(o.properties.value);const n={"里名":o.properties.name,...o.properties},r={"里名":o.properties.name},i={"#":o.properties.id,color:u(o.properties.value),"里名":o.properties.name,[a]:o.properties[a]};o.properties.propertyData=n,o.properties.popupData=r,o.properties.tableData=i}));const p=r.features.map((e=>({...e.properties.tableData}))),d={totalCount:r.features.length},m=5,y=M.y17(m).map((e=>{const t=e/(m-1),a=i+t*(s-i),o=u(a);let l="";return l=0===e?`${Math.round(i)}`:e===m-1?`${Math.round(s)}`:`${Math.round(a)}`,{color:o,label:l,extent:[a,a]}}));return{geoJsonData:r,tableData:p,summaryData:d,legendData:y}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}async function Z(e){try{const t=e.layerId,a=e.colorName,o=`/long-term-care-web/data/csv/${e.fileName}`,l=await fetch(o);if(!l.ok)throw console.error("HTTP 錯誤:",{status:l.status,statusText:l.statusText,url:l.url}),new Error(`HTTP error! status: ${l.status}`);const n=await l.text(),r=n.split("\n").map((e=>e.split(","))),i=r[0].map((e=>e.trim())),s={"公司統一編號":i.indexOf("公司統一編號"),"公司名稱":i.indexOf("公司名稱"),"分公司統一編號":i.indexOf("分公司統一編號"),"分公司名稱":i.indexOf("分公司名稱"),"分公司地址":i.indexOf("分公司地址"),"分公司狀態":i.indexOf("分公司狀態"),"分公司核准設立日期":i.indexOf("分公司核准設立日期"),"分公司最後核准變更日期":i.indexOf("分公司最後核准變更日期"),lat:i.indexOf("lat"),lon:i.indexOf("lon")},c={type:"FeatureCollection",features:r.slice(1).map(((o,l)=>{const n=parseFloat(o[s.lat]),r=parseFloat(o[s.lon]),i=l+1;if(isNaN(n)||isNaN(r))return console.warn(`第 ${i} 行 ${o[s.address]} 的座標無效:`,{lat:o[s.lat],lon:o[s.lon]}),null;const c={"公司統一編號":o[s.公司統一編號],"公司名稱":o[s.公司名稱],"分公司統一編號":o[s.分公司統一編號],"分公司名稱":o[s.分公司名稱],"分公司地址":o[s.分公司地址],"分公司狀態":o[s.分公司狀態],"分公司核准設立日期":o[s.分公司核准設立日期]},u={name:o[s.分公司名稱]},p={"#":i,color:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),"公司名稱":o[s.公司名稱],"分公司名稱":o[s.分公司名稱],"分公司地址":o[s.分公司地址]};return{type:"Feature",geometry:{type:"Point",coordinates:[r,n]},properties:{id:i,layerId:t,layerName:e.layerName,name:o[s.公司名稱],fillColor:getComputedStyle(document.documentElement).getPropertyValue(`--my-color-${a}`).trim(),propertyData:c,popupData:u,tableData:p}}})).filter((e=>null!==e))},u=c.features.map((e=>({...e.properties.tableData}))),p={};c.features.forEach((e=>{const t=e.properties.propertyData.分公司地址;if(t){const e=t.match(/臺北市([^市]*?區)/);if(e){const t=e[1];p[t]=(p[t]||0)+1}}}));const d=Object.entries(p).map((([e,t])=>({name:e,count:t}))).sort(((e,t)=>t.count-e.count)),m={totalCount:c.features.length,districtCount:d};return{geoJsonData:c,tableData:u,summaryData:m}}catch(t){throw console.error("❌ 數據載入失敗:",t),t}}async function ee(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=a||null;console.log(l);const n=await fetch(o);if(!n.ok)throw console.error("HTTP 錯誤:",{status:n.status,statusText:n.statusText,url:n.url}),new Error(`HTTP error! status: ${n.status}`);const r=await n.json();r.features.forEach(((a,o)=>{a.properties.id=o+1,a.properties.layerId=t,a.properties.layerName=e.layerName,a.properties.name=a.properties.NAME,a.properties.color="var(--my-color-white)",a.properties.fillColor=null;const l={"站名":a.properties.name,...a.properties},n={"站名":a.properties.name},r={"#":a.properties.id,color:e.color,"站名":a.properties.name};a.properties.propertyData=l,a.properties.popupData=n,a.properties.tableData=r}));const i=r.features.map((e=>({...e.properties.tableData}))),s={totalCount:r.features.length},c=null;return{geoJsonData:r,tableData:i,summaryData:s,legendData:c}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}async function te(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=a||null;console.log(l);const n=await fetch(o);if(!n.ok)throw console.error("HTTP 錯誤:",{status:n.status,statusText:n.statusText,url:n.url}),new Error(`HTTP error! status: ${n.status}`);const r=await n.json();r.features.forEach(((a,o)=>{a.properties.id=o+1,a.properties.layerId=t,a.properties.layerName=e.layerName,a.properties.name=a.properties.BSM_CHINES,a.properties.color="var(--my-color-white)",a.properties.fillColor=null;const l={"站名":a.properties.name,...a.properties},n={"站名":a.properties.name},r={"#":a.properties.id,color:e.color,"站名":a.properties.name};a.properties.propertyData=l,a.properties.popupData=n,a.properties.tableData=r}));const i=r.features.map((e=>({...e.properties.tableData}))),s={totalCount:r.features.length},c=null;return{geoJsonData:r,tableData:i,summaryData:s,legendData:c}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}async function ae(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=a||null;console.log(l);const n=await fetch(o);if(!n.ok)throw console.error("HTTP 錯誤:",{status:n.status,statusText:n.statusText,url:n.url}),new Error(`HTTP error! status: ${n.status}`);const r=await n.json(),i=Array.from(new Set(r.features.map((e=>e.properties.NEWLAYER)))).sort(((e,t)=>Number(e)-Number(t)));r.features.forEach(((a,o)=>{a.properties.id=o+1,a.properties.layerId=t,a.properties.layerName=e.layerName,a.properties.name=a.properties.ZONE;const l=R(a.properties.ZONE);a.properties.color=l,a.properties.fillColor=l;const n={NEWLAYER:a.properties.NEWLAYER,...a.properties},r={NEWLAYER:a.properties.NEWLAYER},i={"#":a.properties.id,color:l,name:a.properties.name,ZONE:a.properties.ZONE,NEWLAYER:a.properties.NEWLAYER};a.properties.propertyData=n,a.properties.popupData=r,a.properties.tableData=i}));const s=r.features.map((e=>({...e.properties.tableData}))),c={totalCount:r.features.length},u={};r.features.forEach((e=>{const t=e.properties.NEWLAYER,a=e.properties.ZONE;u[t]||(u[t]=a)}));const p=i.map((e=>{const t=u[e]||e,a=R(t);return{color:a,label:`${t} (${e})`,extent:[e,e]}}));return{geoJsonData:r,tableData:s,summaryData:c,legendData:p}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}async function oe(e){try{const t=e.layerId,a=e.fieldName,o=`/long-term-care-web/data/geojson/${e.fileName}`,l=a||null;console.log(l);const n=await fetch(o);if(!n.ok)throw console.error("HTTP 錯誤:",{status:n.status,statusText:n.statusText,url:n.url}),new Error(`HTTP error! status: ${n.status}`);const r=await n.json();r.features.forEach(((a,o)=>{a.properties.id=o+1,a.properties.layerId=t,a.properties.layerName=e.layerName,a.properties.name=a.properties.PTNAME,a.properties.color="var(--my-color-red)",a.properties.fillColor=null;const l={"區名":a.properties.name,...a.properties},n={"區名":a.properties.name},r={"#":a.properties.id,color:e.color,"區名":a.properties.name};a.properties.propertyData=l,a.properties.popupData=n,a.properties.tableData=r}));const i=r.features.map((e=>({...e.properties.tableData}))),s={totalCount:r.features.length},c=null;return{geoJsonData:r,tableData:i,summaryData:s,legendData:c}}catch(t){throw console.error("❌ GeoJSON 數據載入或處理失敗:",t),t}}const le=(0,l.nY)("data",(()=>{const e=(0,c.KR)([{groupName:"居家式長照機構",groupLayers:[{layerId:"居家服務機構",layerName:"居家服務機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家護理所",layerName:"居家護理所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家物理治療所",layerName:"居家物理治療所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家職能治療所",layerName:"居家職能治療所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家呼吸照護所",layerName:"居家呼吸照護所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家語言治療所",layerName:"居家語言治療所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"心理諮商所",layerName:"心理諮商所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"居家式喘息(GA09)及居家式短照(SC09)服務單位",layerName:"居家式喘息(GA09)及居家式短照(SC09)服務單位",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:X,fileName:"台北市政府衛生局/臺北市政府衛生局長照2.0居家式喘息(GA09)及居家式短照(SC09)服務單位一覽表_142_coord.csv",fieldName:null}]},{groupName:"社區式長照機構 - 日間照顧",groupLayers:[{layerId:"小規模多機能服務",layerName:"小規模多機能服務",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"團體家屋",layerName:"團體家屋",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"家庭托顧",layerName:"家庭托顧",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"交通接送",layerName:"交通接送",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null}]},{groupName:"社區式長照機構 - 社區據點",groupLayers:[{layerId:"社區照顧關懷據點",layerName:"社區照顧關懷據點",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:A,fileName:"台北市政府社會局/114年度臺北市社區照顧關懷據點㇐覽表_coord.csv",fieldName:null},{layerId:"社區照顧關懷據點辦理社區喘息服務(C+單位)",layerName:"社區照顧關懷據點辦理社區喘息服務(C+單位)",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:V,fileName:"臺北市政府社會局114年度社區照顧關懷據點辦理社區喘息服務(C+單位)一覽表_coord.csv",fieldName:null},{layerId:"失智社區服務據點",layerName:"失智社區服務據點",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"家庭照顧者支持服務據點",layerName:"家庭照顧者支持服務據點",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"社區照顧關懷據點暨C級巷弄長照站",layerName:"社區照顧關懷據點暨C級巷弄長照站",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:null,fieldName:null},{layerId:"醫事C級巷弄長照站",layerName:"醫事C級巷弄長照站",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"社區整體照顧服務體系C級單位",layerName:"社區整體照顧服務體系C級單位",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:_,fileName:"台北市政府社會局/114年臺北市社區整體照顧服務體系C級單位一覽表_coord.csv",fieldName:null},{layerId:"巷弄長照站喘息(C+)(GA07)及巷弄長照站短照(SC07)服務單位",layerName:"巷弄長照站喘息(C+)(GA07)及巷弄長照站短照(SC07)服務單位",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:K,fileName:"台北市政府衛生局/臺北市政府衛生局長照2.0巷弄長照站喘息(C+)(GA07)及巷弄長照站短照(SC07)服務 單位一覽表_25_coord.csv",fieldName:null},{layerId:"社區式喘息(GA03/GA04/GA06)及社區式短照(SC03/SC04/SC06)服務單位",layerName:"社區式喘息(GA03/GA04/GA06)及社區式短照(SC03/SC04/SC06)服務單位",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:U,fileName:"台北市政府衛生局/臺北市政府衛生局長照2.0社區式喘息(GA03_GA04_GA06)及社區式短照(SC03_SC04_SC06)服務單位一覽表_41_coord.csv",fieldName:null},{layerId:"原住民族文化健康站",layerName:"原住民族文化健康站",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"社區整合型服務中心(A單位)",layerName:"社區整合型服務中心(A單位)",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:H,fileName:"台北市政府衛生局/臺北市社區整合型服務中心(A單位)一覽表_coord.csv",fieldName:null}]},{groupName:"機構式長照機構 - 老人福利機構",groupLayers:[{layerId:"安養機構",layerName:"安養機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:J,fileName:"台北市政府社會局/臺北市老人福利機構名冊1140201_coord_安養.csv",fieldName:null},{layerId:"養護機構",layerName:"養護機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:J,fileName:"台北市政府社會局/臺北市老人福利機構名冊1140201_coord_養護.csv",fieldName:null},{layerId:"長期照顧機構",layerName:"長期照顧機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:J,fileName:"台北市政府社會局/臺北市老人福利機構名冊1140201_coord_長照.csv",fieldName:null},{layerId:"失智照顧機構",layerName:"失智照顧機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null}]},{groupName:"機構式長照機構 - 護理之家",groupLayers:[{layerId:"一般護理之家",layerName:"一般護理之家",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:W,fileName:"台北市政府衛生局/臺北市立案一般護理之家一覽表_coord.csv",fieldName:null}]},{groupName:"機構式長照機構 - 法人長照機構",groupLayers:[{layerId:"社團法人長照機構",layerName:"社團法人長照機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"財團法人長照機構",layerName:"財團法人長照機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"gray-400",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:null,fileName:"",fieldName:null},{layerId:"住宿式長照機構",layerName:"住宿式長照機構",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:j,fileName:"台北市政府衛生局/臺北市立案住宿式長照機構一覽表_coord.csv",fieldName:null},{layerId:"住宿式喘息(GA05)及住宿式短照(SC05)服務單位",layerName:"住宿式喘息(GA05)及住宿式短照(SC05)服務單位",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"red",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:B,fileName:"台北市政府衛生局/臺北市政府衛生局長照2.0住宿式喘息(GA05)及住宿式短照(SC05)服務單位一覽表_66_coord.csv",fieldName:null}]},{groupName:"基礎設施",groupLayers:[{layerId:"醫院",layerName:"醫院",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"lime",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:G,fileName:"112年12月醫療院所分布圖_全國_醫院_coord.csv",fieldName:null},{layerId:"診所",layerName:"診所",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"lime",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:G,fileName:"112年12月醫療院所分布圖_全國_診所_coord.csv",fieldName:null},{layerId:"健保特約藥局",layerName:"健保特約藥局",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:"circle",colorName:"green",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:Q,fileName:"健保特約醫事機構-藥局_coord.csv",fieldName:null},{layerId:"四大超商",layerName:"四大超商",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:null,colorName:"cyan",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:Z,fileName:"全國5大超商資料集_coord.csv",fieldName:null},{layerId:"捷運站點",layerName:"捷運站點",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:null,colorName:"blue",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:ee,fileName:"TpeMrtStations_TWD97_FIDCODE.geojson",fieldName:null},{layerId:"公車站點",layerName:"公車站點",visible:!1,isLoading:!1,isLoaded:!1,type:"point",shape:null,colorName:"blue",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:te,fileName:"busstop.geojson",fieldName:null}]},{groupName:"地理統計資料",groupLayers:[{layerId:"人口統計-14歲以下",layerName:"人口統計-14歲以下",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"deeppurple",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:Y,fileName:"113年12月行政區三段年齡組性別人口統計_村里_WGS84_臺北市.geojson",fieldName:"A0A14_CNT"},{layerId:"人口統計-15~64歲",layerName:"人口統計-15~64歲",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"deeppurple",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:Y,fileName:"113年12月行政區三段年齡組性別人口統計_村里_WGS84_臺北市.geojson",fieldName:"A15A64_CNT"},{layerId:"人口統計-65歲以上",layerName:"人口統計-65歲以上",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"deeppurple",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:Y,fileName:"113年12月行政區三段年齡組性別人口統計_村里_WGS84_臺北市.geojson",fieldName:"A65UP_CNT"},{layerId:"綜稅綜合所得總額-中位數",layerName:"綜稅綜合所得總額-中位數",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"purple",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:q,fileName:"臺北市_村里_綜稅綜合所得總額.geojson",fieldName:"中位數"},{layerId:"綜稅綜合所得總額-平均數",layerName:"綜稅綜合所得總額-平均數",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"purple",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:q,fileName:"臺北市_村里_綜稅綜合所得總額.geojson",fieldName:"平均數"}]},{groupName:"基礎地理資料",groupLayers:[{layerId:"土地利用",layerName:"土地利用",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"brown",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:ae,fileName:"Landuse2.geojson",fieldName:"A0A14_CNT"},{layerId:"行政區界",layerName:"行政區界",visible:!1,isLoading:!1,isLoaded:!1,type:"polygon",shape:null,colorName:"brown",geoJsonData:null,summaryData:null,tableData:null,legendData:null,loader:oe,fileName:"臺北市區界圖_20220915.geojson",fieldName:"A0A14_CNT"}]},{groupName:"數據分析",groupLayers:[{layerId:"analysis-layer",layerName:"數據分析圖層",visible:!0,isLoading:!1,isLoaded:!0,type:"analysis",shape:"mixed",colorName:"green",geoJsonData:{type:"FeatureCollection",features:[]},summaryData:{totalCount:0,type:"分析點",description:"共 0 個分析點，每個點包含 2 公里分析範圍",lastUpdated:(new Date).toISOString(),coverage:"0 平方公里"},tableData:[],legendData:null,loader:null,fileName:null,fieldName:null,isAnalysisLayer:!0},{layerId:"isochrone-analysis-layer",layerName:"等時圈分析圖層",visible:!0,isLoading:!1,isLoaded:!0,type:"isochrone-analysis",shape:"mixed",colorName:"blue",geoJsonData:{type:"FeatureCollection",features:[]},summaryData:{totalCount:0,type:"等時分析點",description:"共 0 個等時分析點，每個點包含等時圈分析範圍",lastUpdated:(new Date).toISOString(),coverage:"0 平方公里"},tableData:[],legendData:null,loader:null,fileName:null,fieldName:null,isIsochroneAnalysisLayer:!0},{layerId:"route-planning-layer",layerName:"路徑規劃圖層",visible:!0,isLoading:!1,isLoaded:!0,type:"route-planning",shape:"point",colorName:"orange",geoJsonData:{type:"FeatureCollection",features:[]},summaryData:{totalCount:0,type:"路徑規劃點",description:"共 0 個路徑規劃點，點選完成後可進行路徑規劃",lastUpdated:(new Date).toISOString(),coverage:"0 個路徑點"},tableData:[],legendData:null,loader:null,fileName:null,fieldName:null,isRoutePlanningLayer:!0},{layerId:"route-optimization-layer",layerName:"路徑優化圖層",visible:!0,isLoading:!1,isLoaded:!0,type:"route-optimization",shape:"point",colorName:"purple",geoJsonData:{type:"FeatureCollection",features:[]},summaryData:{totalCount:0,type:"路徑優化點",description:"共 0 個路徑優化點，點選完成後可進行路徑優化",lastUpdated:(new Date).toISOString(),coverage:"0 個優化點"},tableData:[],legendData:null,loader:null,fileName:null,fieldName:null,isRouteOptimizationLayer:!0}]}]),t=t=>{for(const a of e.value)for(const e of a.groupLayers)if(e.layerId===t)return e;return null},a=()=>{const t=[];for(const a of e.value)t.push(...a.groupLayers);return t},o=async e=>{console.log("🔧 DataStore: toggleLayerVisibility 被調用",e);const a=t(e);if(a){if(console.log("🔧 DataStore: 找到圖層",a.layerName,"當前狀態:",a.visible),a.visible=!a.visible,console.log("🔧 DataStore: 新狀態:",a.visible),a.visible&&!a.isLoaded&&!a.isLoading&&!a.isAnalysisLayer&&!a.isIsochroneAnalysisLayer)try{a.isLoading=!0;const e=await a.loader(a);a.geoJsonData=e.geoJsonData,a.tableData=e.tableData,a.summaryData=e.summaryData,a.legendData=e.legendData||null,a.isLoaded=!0,console.log(`✅ 圖層 "${a.layerName}" 載入完成 (${e.geoJsonData?.features?.length||0} 筆資料)`),console.log("📊 圖層摘要資料:",a.summaryData)}catch(o){console.error(`Failed to load data for layer "${a.layerName}":`,o),a.visible=!1}finally{a.isLoading=!1}}else console.error(`Layer with id "${e}" not found.`)},l=(0,c.KR)(null),r=e=>{l.value=e},i=()=>{l.value=null},s=(e,t,a,o)=>{const l=6371e3,n=(a-e)*Math.PI/180,r=(o-t)*Math.PI/180,i=Math.sin(n/2)*Math.sin(n/2)+Math.cos(e*Math.PI/180)*Math.cos(a*Math.PI/180)*Math.sin(r/2)*Math.sin(r/2),s=2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i));return l*s},u=(e,t,o=2e3)=>{const l=[],n=a().filter((e=>e.visible&&e.isLoaded&&"point"===e.type&&!e.isAnalysisLayer&&!e.isIsochroneAnalysisLayer&&e.geoJsonData));return console.log("🔍 檢查可見的點圖層:",n.map((e=>e.layerName))),n.forEach((a=>{a.geoJsonData&&a.geoJsonData.features&&a.geoJsonData.features.forEach((n=>{if("Point"===n.geometry.type){const[r,i]=n.geometry.coordinates,c=s(e,t,i,r);if(c<=o){const e={...n,layerId:a.layerId,layerName:a.layerName,distance:Math.round(c)};l.push(e)}}}))})),l.sort(((e,t)=>e.distance-t.distance)),console.log(`🎯 在 ${o/1e3}公里範圍內找到 ${l.length} 個點物件`),l},p=(e,t,o=2e3)=>{const l=[],n=a().filter((e=>e.visible&&e.isLoaded&&"polygon"===e.type&&!e.isAnalysisLayer&&!e.isIsochroneAnalysisLayer&&e.geoJsonData));return console.log("🔍 檢查可見的多邊形圖層:",n.map((e=>e.layerName))),n.forEach((a=>{a.geoJsonData&&a.geoJsonData.features&&a.geoJsonData.features.forEach((n=>{if("Polygon"===n.geometry.type||"MultiPolygon"===n.geometry.type){const r=d(n.geometry,e,t,o);if(r){const e={...n,layerId:a.layerId,layerName:a.layerName,overlapType:"intersects"};l.push(e)}}}))})),console.log(`🎯 在 ${o/1e3}公里範圍內找到 ${l.length} 個重疊多邊形`),l},d=(e,t,a,o)=>{const l="Polygon"===e.type?[e.coordinates]:e.coordinates;for(const n of l)for(const e of n)for(const[l,n]of e){const e=s(t,a,n,l);if(e<=o)return!0}return!1},m=e=>{const t=e.geoJsonData.features.filter((e=>"circle-analysis"===e.properties.type));e.summaryData={totalCount:t.length},e.tableData=t.map((e=>({"#":e.properties.id,"名稱":e.properties.name,"範圍內點位數":e.properties.pointsInRange.length,"範圍內面域數":e.properties.polygonInRange.length})))},y=e=>{const t=e.geoJsonData.features.filter((e=>"isochrone-circle-analysis"===e.properties.type||"isochrone-polygon-analysis"===e.properties.type));e.summaryData={totalCount:t.length},e.tableData=t.map((e=>({"#":e.properties.id,"名稱":e.properties.name,"類型":"isochrone-polygon-analysis"===e.properties.type?"等時圈多邊形":"預估圓圈","車程時間":e.properties.travelTime?`${e.properties.travelTime}分鐘`:"預估","範圍內點位數":e.properties.pointsInRange?e.properties.pointsInRange.length:0,"範圍內面域數":e.properties.polygonInRange?e.properties.polygonInRange.length:0})))},g=(e,a,o=2e3)=>{const l=t("analysis-layer");if(!l)return;const n=l.geoJsonData.features.filter((e=>"point-analysis"===e.properties.type)).length+1,r=u(e,a,o),i=p(e,a,o),s={};r.forEach((e=>{s[e.layerName]||(s[e.layerName]=0),s[e.layerName]++}));const c={};i.forEach((e=>{c[e.layerName]||(c[e.layerName]=0),c[e.layerName]++}));const d=`分析範圍 ${n}`,y={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:n,layerId:"analysis-layer",type:"circle-analysis",name:d,radius:o,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c,propertyData:{"名稱":d,"範圍內點位數":r.length,"範圍內多邊形數":i.length,"分析範圍半徑":`${(o/1e3).toFixed(1)} 公里`}}},g={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:`${n}_analysis_point`,layerId:"analysis-layer",type:"point-analysis",parentId:n}};return l.geoJsonData.features.push(y,g),m(l),{pointId:n,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c}},f=async(e,t,a=10)=>{const o="5b3ce3597851110001cf6248cd3e1a052bec45bc8410b037091bb766",l=[t,e];try{const e=await fetch("https://api.openrouteservice.org/v2/isochrones/driving-car",{method:"POST",headers:{Authorization:o,"Content-Type":"application/json"},body:JSON.stringify({locations:[l],range:[60*a],range_type:"time"})});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();return t}catch(n){throw console.error("獲取等時圈數據失敗:",n),n}},h=(e,t,o)=>{const l=[];if(!e.features||0===e.features.length)return console.warn("等時圈數據無效或為空"),l;const n=e.features[0],r=a().filter((e=>e.visible&&e.isLoaded&&"point"===e.type&&!e.isAnalysisLayer&&!e.isIsochroneAnalysisLayer&&e.geoJsonData));if(console.log("🔍 檢查等時圈範圍內的點圖層:",r.map((e=>e.layerName))),0===r.length){console.warn("⚠️ 沒有找到符合條件的點圖層進行等時圈分析！");const e=a().filter((e=>"point"===e.type));return console.log("📊 所有點圖層狀態診斷:"),e.forEach((e=>{const t=[];e.visible||t.push("不可見"),e.isLoaded||t.push("未載入"),e.geoJsonData||t.push("無數據"),console.log(`  - ${e.layerName}: ${t.length>0?t.join(", "):"✅ 符合條件"}`)})),console.log("💡 解決方案："),console.log("   1. 在左側圖層面板中開啟需要分析的點圖層（如醫院、診所等）"),console.log("   2. 等待圖層載入完成後再進行等時圈分析"),console.log("   3. 或者可以考慮自動載入相關圖層"),l}return r.forEach((e=>{e.geoJsonData&&e.geoJsonData.features&&e.geoJsonData.features.forEach((a=>{if("Point"===a.geometry.type){const[r,i]=a.geometry.coordinates;if(b([r,i],n.geometry)){const n=s(t,o,i,r),c={...a,layerId:e.layerId,layerName:e.layerName,distance:Math.round(n)};l.push(c)}}}))})),l.sort(((e,t)=>e.distance-t.distance)),console.log(`🎯 在等時圈範圍內找到 ${l.length} 個點物件`),l},v=e=>{const t=[];if(!e.features||0===e.features.length)return console.warn("等時圈數據無效或為空，無法計算多邊形重疊"),t;const o=e.features[0],l=a().filter((e=>e.visible&&e.isLoaded&&"polygon"===e.type&&!e.isAnalysisLayer&&!e.isIsochroneAnalysisLayer&&e.geoJsonData));return l.forEach((e=>{e.geoJsonData&&e.geoJsonData.features&&e.geoJsonData.features.forEach((a=>{if("Polygon"===a.geometry.type||"MultiPolygon"===a.geometry.type){const l=w(a.geometry,o.geometry);if(l){const o={...a,layerId:e.layerId,layerName:e.layerName,overlapType:"intersects"};t.push(o)}}}))})),console.log(`🎯 在等時圈範圍內找到 ${t.length} 個重疊多邊形`),t},b=(e,t)=>{const[a,o]=e;let l;if("Polygon"===t.type)l=t.coordinates[0];else{if("MultiPolygon"!==t.type)return console.warn(`不支援的多邊形類型: ${t.type}`),!1;l=t.coordinates[0][0]}let n=!1;for(let r=0,i=l.length-1;r<l.length;i=r++){const[e,t]=l[r],[s,c]=l[i];t>o!==c>o&&a<(s-e)*(o-t)/(c-t)+e&&(n=!n)}return n},w=(e,t)=>{let a;if("Polygon"===e.type)a=e.coordinates[0];else{if("MultiPolygon"!==e.type)return console.warn(`不支援的多邊形類型用於重疊檢測: ${e.type}`),!1;a=e.coordinates[0][0]}for(const[o,l]of a)if(b([o,l],t))return!0;return!1},D=async()=>{const e=["醫院","診所","藥局","社區照顧關懷據點","社區整合型服務中心(A單位)","一般護理之家","住宿式長照機構"],a=[];if(e.forEach((e=>{const o=t(e);!o||o.isLoaded||o.isLoading||a.push(o)})),a.length>0){console.log(`🚀 自動載入 ${a.length} 個重要圖層用於等時圈分析:`,a.map((e=>e.layerName)));const e=a.map((async e=>{try{if(e.isLoading=!0,e.visible=!0,e.loader){const t=await e.loader(e.fileName);e.geoJsonData=t.geoJsonData,e.summaryData=t.summaryData,e.tableData=t.tableData,e.legendData=t.legendData,e.isLoaded=!0,console.log(`✅ 已載入圖層: ${e.layerName}`)}}catch(t){console.error(`❌ 載入圖層失敗: ${e.layerName}`,t)}finally{e.isLoading=!1}}));await Promise.all(e),console.log("🎉 重要圖層載入完成，可以進行等時圈分析")}else console.log("✅ 重要圖層已經載入，無需額外載入")},x=async(e,a,o=10)=>{const l=t("isochrone-analysis-layer");if(!l)return void console.error("找不到等時圈分析圖層");await D();const n=l.geoJsonData.features.filter((e=>"isochrone-point-analysis"===e.properties.type)).length+1;try{l.isLoading=!0,console.log(`🌐 正在獲取 ${o} 分鐘車程的等時圈數據...`);const t=await f(e,a,o),r=h(t,e,a),i=v(t),s={};r.forEach((e=>{s[e.layerName]||(s[e.layerName]=0),s[e.layerName]++}));const c={};i.forEach((e=>{c[e.layerName]||(c[e.layerName]=0),c[e.layerName]++}));const u=`等時分析範圍 ${n} (${o}分鐘車程)`,p={type:"Feature",geometry:t.features[0].geometry,properties:{id:n,layerId:"isochrone-analysis-layer",type:"isochrone-polygon-analysis",name:u,travelTime:o,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c,propertyData:{"名稱":u,"車程時間":`${o} 分鐘`,"範圍內點位數":r.length,"範圍內多邊形數":i.length}}},d={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:`${n}_isochrone_analysis_point`,layerId:"isochrone-analysis-layer",type:"isochrone-point-analysis",parentId:n}};return l.geoJsonData.features.push(p,d),y(l),console.log(`✅ 成功創建等時圈分析 ${n}，包含 ${r.length} 個點位`),{pointId:n,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c,isochroneData:t}}catch(r){return console.error("創建等時圈分析失敗:",r),console.log("🔄 回退到簡單圓圈分析模式"),L(e,a,n)}finally{l.isLoading=!1}},L=(e,a,o)=>{const l=t("isochrone-analysis-layer");if(!l)return void console.error("回退方案：找不到等時圈分析圖層");const n=3e3;console.log("🔄 回退模式：使用圓圈分析計算範圍內設施");const r=u(e,a,n),i=p(e,a,n);console.log(`🔄 回退模式結果：找到 ${r.length} 個點設施，${i.length} 個多邊形區域`);const s={};r.forEach((e=>{s[e.layerName]||(s[e.layerName]=0),s[e.layerName]++}));const c={};i.forEach((e=>{c[e.layerName]||(c[e.layerName]=0),c[e.layerName]++}));const d=`等時分析範圍 ${o} (預估範圍)`,m={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:o,layerId:"isochrone-analysis-layer",type:"isochrone-circle-analysis",name:d,radius:n,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c,propertyData:{"名稱":d,"範圍內點位數":r.length,"範圍內多邊形數":i.length}}},g={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:`${o}_isochrone_analysis_point`,layerId:"isochrone-analysis-layer",type:"isochrone-point-analysis",parentId:o}};return l.geoJsonData.features.push(m,g),y(l),console.log(`🔄 回退方案：創建 ${n/1e3}km 圓圈分析，包含 ${r.length} 個點位`),{pointId:o,pointsInRange:r,polygonInRange:i,layerStats:s,polygonStats:c}},C=()=>{const e=t("analysis-layer");e&&(e.geoJsonData.features=[],m(e),console.log("🗑️ 清除分析圖層數據"))},k=()=>{const e=t("isochrone-analysis-layer");e?(e.geoJsonData.features=[],y(e),console.log("🗑️ 清除等時圈分析圖層數據")):console.warn("找不到等時圈分析圖層，無法執行清除操作")},N=e=>{const a=t("analysis-layer");a&&a.geoJsonData&&(a.geoJsonData.features=a.geoJsonData.features.filter((t=>{const a="circle-analysis"===t.properties.type&&t.properties.id===e,o="point-analysis"===t.properties.type&&t.properties.parentId===e;return!a&&!o})),m(a),console.log("🗑️ 刪除分析點:",e))},I=e=>{const a=t("isochrone-analysis-layer");a&&a.geoJsonData?(a.geoJsonData.features=a.geoJsonData.features.filter((t=>{const a="isochrone-circle-analysis"===t.properties.type&&t.properties.id===e,o="isochrone-polygon-analysis"===t.properties.type&&t.properties.id===e,l="isochrone-point-analysis"===t.properties.type&&t.properties.parentId===e;return!a&&!o&&!l})),y(a),console.log("🗑️ 刪除等時圈分析點:",e)):console.warn("找不到等時圈分析圖層或其數據，無法執行刪除操作")},T=e=>{const t=e.geoJsonData.features.filter((e=>"route-line"===e.properties.type)),a=e.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type&&"completed"!==e.properties.status)),o=t.length+(a.length>0?1:0);if(t.length>0||a.length>0){const l=t.reduce(((e,t)=>e+(t.properties.distance||0)),0),n=t.reduce(((e,t)=>e+(t.properties.duration||0)),0);let r="";r=t.length>0&&a.length>0?`已完成 ${t.length} 條路線，正在規劃第 ${t.length+1} 條路線（已選擇 ${a.length} 個路徑點）`:t.length>0?`已完成 ${t.length} 條路線，總距離 ${l.toFixed(2)} 公里，總時間 ${n} 分鐘`:`正在規劃第 1 條路線，已選擇 ${a.length} 個路徑點`,e.summaryData={totalCount:o,type:"路徑規劃",description:r,lastUpdated:(new Date).toISOString(),coverage:t.length>0?`${l.toFixed(2)} 公里`:`${a.length} 個路徑點`}}else e.summaryData={totalCount:0,type:"路徑規劃",description:"尚未開始路徑規劃，點選地圖開始規劃路徑",lastUpdated:(new Date).toISOString(),coverage:"0 條路線"};const l=[];if(t.forEach(((e,t)=>{l.push({"#":t+1,id:e.properties.id,"名稱":e.properties.name||`路線 ${t+1}`,"類型":"已完成路線","起點":e.properties.startPointName||"起點","終點":e.properties.endPointName||"終點","路徑點數":e.properties.waypoints||0,"總距離":`${e.properties.distance} 公里`,"預估時間":`${e.properties.duration} 分鐘`,"建立時間":new Date(e.properties.createdAt).toLocaleString("zh-TW"),"狀態":"已完成"})})),a.length>0){const e=a[0],o=a[a.length-1];l.push({"#":t.length+1,id:e.properties.id,"名稱":`路線 ${t.length+1}`,"類型":"規劃中","起點":`${e.properties.name}`,"終點":a.length>1?`${o.properties.name}`:"同起點","路徑點數":a.length,"總距離":"-","預估時間":"-","建立時間":new Date(e.properties.createdAt).toLocaleString("zh-TW"),"狀態":"規劃中"})}e.tableData=l},$=(e,a)=>{const o=t("route-planning-layer");if(!o)return console.error("找不到路徑規劃圖層"),null;const l=o.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type&&"completed"!==e.properties.status)),n=l.length+1,r=`route_point_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i=`路徑點 ${n}`,s={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:r,layerId:"route-planning-layer",type:"route-planning-point",name:i,order:n,latitude:e,longitude:a,createdAt:(new Date).toISOString()}};return o.geoJsonData.features.push(s),T(o),console.log(`🗺️ 添加路徑規劃點 ${n}:`,i,`(${e.toFixed(6)}, ${a.toFixed(6)})`),console.log(`📍 路徑規劃點已添加到圖層，總點數: ${o.geoJsonData.features.length}`),console.log(`🎯 路徑規劃圖層可見性: ${o.visible}`),r},E=(e=!1)=>{const a=t("route-planning-layer");a?(e?(a.geoJsonData.features=[],console.log("🗑️ 已清空路徑規劃圖層的所有內容（包括已完成的路線和路徑點）")):(a.geoJsonData.features=a.geoJsonData.features.filter((e=>"route-planning-point"!==e.properties.type||"completed"===e.properties.status)),console.log("🗑️ 已清空當前正在規劃的路徑點，保留已完成的路線和路徑點")),T(a)):console.warn("找不到路徑規劃圖層，無法清空")},F=e=>{const a=t("route-planning-layer");if(!a||!a.geoJsonData)return void console.warn("找不到路徑規劃圖層或其數據，無法執行刪除操作");const o=a.geoJsonData.features.length;a.geoJsonData.features=a.geoJsonData.features.filter((t=>t.properties.id!==e));const l=a.geoJsonData.features.length;if(o===l)return void console.warn("找不到指定的路徑規劃點:",e);const n=a.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type));n.forEach(((e,t)=>{const a=t+1;e.properties.order=a,e.properties.name=`路徑點 ${a}`})),T(a),console.log("🗑️ 刪除路徑規劃點:",e)},O=()=>{const e=t("route-planning-layer");if(!e)return console.warn("找不到路徑規劃圖層"),[];const a=e.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type&&"completed"!==e.properties.status)).sort(((e,t)=>e.properties.order-t.properties.order)),o=a.map((e=>e.geometry.coordinates));return console.log(`📍 獲取 ${o.length} 個路徑點坐標`),o},z=async(e,t="driving-car")=>{const a="5b3ce3597851110001cf6248cd3e1a052bec45bc8410b037091bb766";if(!e||e.length<2)throw new Error("路徑規劃至少需要2個路徑點");try{console.log(`🛣️ 開始計算路徑，使用 ${e.length} 個路徑點`),console.log("路徑點坐標:",e);const l=`https://api.openrouteservice.org/v2/directions/${t}/geojson`,n=await fetch(l,{method:"POST",headers:{Accept:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8","Content-Type":"application/json",Authorization:a},body:JSON.stringify({coordinates:e})});if(!n.ok){let e=`HTTP ${n.status}`;try{const t=await n.json();t.error&&t.error.message&&(e=t.error.message)}catch(o){e=`HTTP ${n.status} - ${n.statusText}`}throw new Error(`ORS API 錯誤: ${e}`)}const r=await n.json();if(!r.features||0===r.features.length)throw new Error("API 返回的路徑數據為空");return console.log("✅ 路徑計算成功"),console.log(`📏 路徑距離: ${(r.features[0].properties.summary.distance/1e3).toFixed(2)} 公里`),console.log(`⏱️ 預估時間: ${Math.round(r.features[0].properties.summary.duration/60)} 分鐘`),r}catch(l){throw console.error("🚫 路徑計算失敗:",l),l}},P=async(e="driving-car")=>{const a=t("route-planning-layer");if(!a)return console.error("找不到路徑規劃圖層"),null;const o=O();if(o.length<2)return console.warn("⚠️ 路徑規劃至少需要2個點，目前只有",o.length,"個點"),null;try{console.log("🚀 開始路徑規劃計算...");const t=await z(o,e),l=t.features[0],n=l.properties.summary,r=a.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type)),i=r[0],s=r[r.length-1],c=(n.distance/1e3).toFixed(2),u=Math.round(n.duration/60),p=a.geoJsonData.features.filter((e=>"route-line"===e.properties.type)),d=p.length+1,m=`route_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,y={type:"Feature",geometry:l.geometry,properties:{id:m,layerId:"route-planning-layer",type:"route-line",name:`路線 ${d}`,routeNumber:d,distance:parseFloat(c),duration:u,profile:e,waypoints:o.length,startPointName:i.properties.name,endPointName:s.properties.name,createdAt:(new Date).toISOString()}};return a.geoJsonData.features.push(y),a.geoJsonData.features.forEach((e=>{"route-planning-point"===e.properties.type&&(e.properties.status="completed",e.properties.routeId=m,e.properties.routeNumber=d)})),T(a),console.log("✅ 路徑規劃完成！"),console.log(`📏 總距離: ${c} 公里`),console.log(`⏱️ 預估時間: ${u} 分鐘`),console.log(`🛣️ 交通方式: ${e}`),{routeId:m,routeNumber:d,distance:parseFloat(c),duration:u,waypoints:o.length,profile:e,geometry:l.geometry}}catch(l){return console.error("❌ 路徑規劃失敗:",l),a.summaryData.description=`路徑規劃失敗: ${l.message}`,null}},S=(e,a)=>{const o=t("route-optimization-layer");if(!o)return console.error("找不到路徑優化圖層"),null;const l=o.geoJsonData.features.filter((e=>"optimization-point"===e.properties.type&&"completed"!==e.properties.status)),n=l.length+1,r=`optimization_point_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i=`優化點 ${n}`,s={type:"Feature",geometry:{type:"Point",coordinates:[a,e]},properties:{id:r,layerId:"route-optimization-layer",type:"optimization-point",name:i,order:n,latitude:e,longitude:a,createdAt:(new Date).toISOString()}};return o.geoJsonData.features.push(s),le(o),console.log(`🗺️ 添加路徑優化點 ${n}:`,i,`(${e.toFixed(6)}, ${a.toFixed(6)})`),console.log(`📍 路徑優化點已添加到圖層，總點數: ${o.geoJsonData.features.length}`),console.log(`🎯 路徑優化圖層可見性: ${o.visible}`),r},M=(e=!1)=>{const a=t("route-optimization-layer");a?(e?(a.geoJsonData.features=[],console.log("🗑️ 已清空路徑優化圖層的所有內容（包括已完成的優化路線和優化點）")):(a.geoJsonData.features=a.geoJsonData.features.filter((e=>"optimization-point"!==e.properties.type||"completed"===e.properties.status)),console.log("🗑️ 已清空當前正在優化的點，保留已完成的優化路線和優化點")),le(a)):console.warn("找不到路徑優化圖層，無法清空")},R=()=>{const e=t("route-optimization-layer");if(!e)return console.warn("找不到路徑優化圖層"),[];const a=e.geoJsonData.features.filter((e=>"optimization-point"===e.properties.type&&"completed"!==e.properties.status)).sort(((e,t)=>e.properties.order-t.properties.order));return a.map((e=>e.geometry.coordinates))},le=e=>{const t=e.geoJsonData.features.filter((e=>"optimized-route-line"===e.properties.type)),a=e.geoJsonData.features.filter((e=>"optimization-point"===e.properties.type&&"completed"!==e.properties.status)),o=t.length+(a.length>0?1:0);if(t.length>0||a.length>0){const l=t.reduce(((e,t)=>e+(t.properties.distance||0)),0),n=t.reduce(((e,t)=>e+(t.properties.duration||0)),0);let r="";r=t.length>0&&a.length>0?`已完成 ${t.length} 條優化路線，正在規劃第 ${t.length+1} 條路線（已選擇 ${a.length} 個優化點）`:t.length>0?`已完成 ${t.length} 條優化路線，總距離 ${l.toFixed(2)} 公里，總時間 ${n} 分鐘`:`正在規劃第 1 條優化路線，已選擇 ${a.length} 個優化點`,e.summaryData={totalCount:o,type:"路徑優化",description:r,lastUpdated:(new Date).toISOString(),coverage:t.length>0?`${l.toFixed(2)} 公里`:`${a.length} 個優化點`}}else e.summaryData={totalCount:0,type:"路徑優化",description:"尚未開始路徑優化，點選地圖開始選擇優化點",lastUpdated:(new Date).toISOString(),coverage:"0 條路線"};const l=[];if(t.forEach(((e,t)=>{l.push({"#":t+1,id:e.properties.id,"名稱":e.properties.name||`優化路線 ${t+1}`,"類型":"已完成路線","起點":"起點","終點":"終點","路徑點數":e.properties.waypoints||0,"總距離":`${e.properties.distance} 公里`,"預估時間":`${e.properties.duration} 分鐘`,"建立時間":new Date(e.properties.createdAt).toLocaleString("zh-TW"),"狀態":"已完成"})})),a.length>0){const e=a[0],o=a[a.length-1];l.push({"#":t.length+1,id:e.properties.id,"名稱":`優化路線 ${t.length+1}`,"類型":"規劃中","起點":`${e.properties.name}`,"終點":a.length>1?`${o.properties.name}`:"同起點","路徑點數":a.length,"總距離":"-","預估時間":"-","建立時間":new Date(e.properties.createdAt).toLocaleString("zh-TW"),"狀態":"規劃中"})}e.tableData=l},ne=async(e="driving-car")=>{const a=t("route-optimization-layer");if(!a)return console.error("找不到路徑優化圖層"),null;const o=R();if(o.length<2)return console.warn("⚠️ 路徑優化至少需要2個點，目前只有",o.length,"個點"),null;try{console.log("🚀 開始路徑優化計算...");const t=await re(o,e),n=[];let r=0,i=0;console.log("🔍 調試優化結果:"),console.log("總路線數:",t.routes.length),console.log("原始優化點數:",o.length);for(let o=0;o<t.routes.length;o++){const s=t.routes[o];console.log(`🚗 處理路線 ${o+1}:`,s),console.log("路線步驟數:",s.steps.length);const c=[],u=[],p=new Set;console.log("🔍 詳細步驟分析:"),s.steps.forEach(((e,t)=>{console.log(`  步驟 ${t+1}:`,{type:e.type,location:e.location,id:e.id,job:e.job}),c.push(e.location)})),console.log(`📊 處理所有步驟，共 ${s.steps.length} 個步驟`),s.steps.forEach(((e,t)=>{console.log(`  處理步驟 ${t+1}:`,{type:e.type,location:e.location,id:e.id,job:e.job});const o=a.geoJsonData.features.find((t=>{if("optimization-point"!==t.properties.type)return!1;const a=1e-4,o=Math.abs(t.geometry.coordinates[0]-e.location[0]),l=Math.abs(t.geometry.coordinates[1]-e.location[1]);return o<a&&l<a}));o?p.has(o.properties.id)?console.log(`🔄 跳過重複點: ${o.properties.name} (${o.properties.order})`):(p.add(o.properties.id),u.push({order:o.properties.order,name:o.properties.name,coordinates:o.geometry.coordinates,stepType:e.type,visitOrder:t+1}),console.log(`✅ 找到匹配點: ${o.properties.name} (${o.properties.order}) - ${e.type}`)):(console.warn(`⚠️ 未找到匹配的原始點: [${e.location[0]}, ${e.location[1]}] - ${e.type}`),u.push({order:u.length+1,name:`${"start"===e.type?"起點":"end"===e.type?"終點":"未知點"} ${u.length+1}`,coordinates:e.location,stepType:e.type,visitOrder:t+1}))}));const d=a.geoJsonData.features.filter((e=>"optimization-point"===e.properties.type&&"completed"!==e.properties.status));console.log(`🔍 檢查遺漏點: 用戶點擊了 ${d.length} 個點，已匹配 ${u.length} 個點`),console.log("🔍 所有用戶點:",d.map((e=>({order:e.properties.order,name:e.properties.name,coords:e.geometry.coordinates})))),console.log("🔍 已匹配點:",u.map((e=>({order:e.order,name:e.name,coords:e.coordinates})))),u.length<d.length&&d.forEach((e=>{const t=u.some((t=>{const a=1e-4,o=Math.abs(t.coordinates[0]-e.geometry.coordinates[0]),l=Math.abs(t.coordinates[1]-e.geometry.coordinates[1]);return o<a&&l<a}));t||(u.push({order:e.properties.order,name:e.properties.name,coordinates:e.geometry.coordinates}),console.log(`✅ 補充遺漏點: ${e.properties.name} (${e.properties.order})`))})),console.log(`📊 路線 ${o+1} 處理結果:`),console.log("  優化坐標數:",c.length),console.log("  匹配點信息數:",u.length),console.log("  匹配點信息:",u);let m={type:"LineString",coordinates:[]},y=0,g=0;if(c.length>=2)try{const t=await z(c,e);if(t&&t.features&&t.features.length>0){const e=t.features[0];m=e.geometry,y=(e.properties.summary.distance/1e3).toFixed(2),g=Math.round(e.properties.summary.duration/60)}}catch(l){console.warn("無法獲取路線幾何，使用直線連接:",l),m={type:"LineString",coordinates:c},y=(s.duration/1e3).toFixed(2),g=Math.round(s.duration/60)}r+=parseFloat(y),i+=g;const f=a.geoJsonData.features.filter((e=>"optimized-route-line"===e.properties.type)),h=f.length+o+1,v=`optimized_route_${Date.now()}_${o}_${Math.random().toString(36).substr(2,9)}`,b={type:"Feature",geometry:m,properties:{id:v,layerId:"route-optimization-layer",type:"optimized-route-line",name:`優化路線 ${h}`,routeNumber:h,vehicleId:s.vehicle,distance:parseFloat(y),duration:g,profile:e,waypoints:u.length,optimizedOrder:c,optimizedPointInfo:u,createdAt:(new Date).toISOString()}};n.push(b)}return n.forEach((e=>{a.geoJsonData.features.push(e)})),a.geoJsonData.features.forEach((e=>{"optimization-point"===e.properties.type&&(e.properties.status="completed")})),le(a),console.log("✅ 路徑優化完成！"),console.log(`📏 總優化距離: ${r.toFixed(2)} 公里`),console.log(`⏱️ 總優化時間: ${i} 分鐘`),console.log(`🚗 共生成 ${n.length} 條優化路線`),console.log(`🛣️ 交通方式: ${e}`),{routeCount:n.length,totalDistance:r,totalDuration:i,waypoints:o.length,profile:e,routes:n.map((e=>({id:e.properties.id,name:e.properties.name,distance:e.properties.distance,duration:e.properties.duration})))}}catch(l){return console.error("❌ 路徑優化失敗:",l),a.summaryData.description=`路徑優化失敗: ${l.message}`,null}},re=async(e,t="driving-car")=>{const a="5b3ce3597851110001cf6248cd3e1a052bec45bc8410b037091bb766";if(!e||e.length<2)throw new Error("路徑優化至少需要2個優化點");try{console.log(`🔄 開始路徑優化計算，使用 ${e.length} 個優化點`),console.log("優化點坐標:",e);const l={jobs:e.slice(1,-1).map(((e,t)=>({id:t+1,location:e}))),vehicles:[{id:1,profile:t,start:e[0],end:e[e.length-1]}]},n="https://api.openrouteservice.org/optimization",r=await fetch(n,{method:"POST",headers:{Accept:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8","Content-Type":"application/json",Authorization:a},body:JSON.stringify(l)});if(!r.ok){let e=`HTTP ${r.status}`;try{const t=await r.json();t.error&&t.error.message&&(e=t.error.message)}catch(o){e=`HTTP ${r.status} - ${r.statusText}`}throw new Error(`ORS API 錯誤: ${e}`)}const i=await r.json();if(0===i.code&&i.routes&&i.routes.length>0){console.log("✅ 路徑優化計算成功"),console.log(`📊 總計: ${i.summary.routes} 條路線，總成本: ${i.summary.cost}，總時間: ${Math.round(i.summary.duration/60)} 分鐘`);const e={...i,summary:i.summary,routes:i.routes,unassigned:i.unassigned||[]};return console.log("🔄 優化結果:",e),e}throw new Error("API 返回的優化數據為空或無效")}catch(l){throw console.error("🚫 路徑優化計算失敗:",l),l}};return{layers:e,findLayerById:t,getAllLayers:a,toggleLayerVisibility:o,selectedFeature:l,setSelectedFeature:r,clearSelectedFeature:i,addAnalysisPoint:g,clearAnalysisLayer:C,deleteAnalysisPoint:N,addIsochroneAnalysisPoint:x,clearIsochroneAnalysisLayer:k,deleteIsochroneAnalysisPoint:I,addRoutePlanningPoint:$,clearRoutePlanningLayer:E,deleteRoutePlanningPoint:F,getRoutePlanningCoordinates:O,calculateAndDrawRoute:P,addRouteOptimizationPoint:S,clearRouteOptimizationLayer:M,getRouteOptimizationCoordinates:R,calculateAndDrawOptimizedRoute:ne,calculatePointsInRange:u,calculatePolygonInRange:p,visibleLayers:(0,n.EW)((()=>a().filter((e=>e.visible)))),loadingLayers:(0,n.EW)((()=>a().filter((e=>e.isLoading))))}}),{persist:!0}),ne={key:0,class:"position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center",style:{"background-color":"rgba(0, 0, 0, 0.7)","z-index":"9999"}},re={class:"text-center my-bgcolor-white p-4 rounded shadow",style:{"min-width":"300px","max-width":"400px"}},ie={class:"my-title-lg-black"},se={key:0,class:"mt-3"},ce={class:"progress",style:{height:"8px"}},ue=["aria-valuenow"],pe={key:1,class:"mt-2"},de={class:"my-content-xs-gray"};function me(e,t,a,o,l,r){return a.isVisible?((0,n.uX)(),(0,n.CE)("div",ne,[(0,n.Lk)("div",re,[t[0]||(t[0]=(0,n.Lk)("div",{class:"spinner-border text-primary mb-3",style:{width:"2rem",height:"2rem"},role:"status"},[(0,n.Lk)("span",{class:"visually-hidden"},"載入中...")],-1)),(0,n.Lk)("div",ie,(0,g.v_)(a.loadingText),1),a.showProgress&&a.progress>=0?((0,n.uX)(),(0,n.CE)("div",se,[(0,n.Lk)("div",ce,[(0,n.Lk)("div",{class:"progress-bar bg-primary d-flex align-items-center justify-content-center",role:"progressbar",style:(0,g.Tr)([{width:a.progress+"%"},{transition:"width 0.3s ease","font-size":"0.75rem",color:"white"}]),"aria-valuenow":a.progress,"aria-valuemin":"0","aria-valuemax":"100"},(0,g.v_)(Math.round(a.progress))+"% ",13,ue)])])):(0,n.Q3)("",!0),a.subText?((0,n.uX)(),(0,n.CE)("div",pe,[(0,n.Lk)("small",de,(0,g.v_)(a.subText),1)])):(0,n.Q3)("",!0)])])):(0,n.Q3)("",!0)}var ye={name:"LoadingOverlay",props:{isVisible:{type:Boolean,default:!1,required:!0},loadingText:{type:String,default:"載入中..."},progress:{type:Number,default:-1,validator:e=>e>=-1&&e<=100},showProgress:{type:Boolean,default:!1},subText:{type:String,default:""}}};const ge=(0,p.A)(ye,[["render",me]]);var fe=ge;const he={class:"my-bgcolor-gray-100 h-100 d-flex flex-column overflow-hidden"},ve={class:"flex-grow-1 overflow-hidden"};function be(e,t,a,o,l,r){const i=(0,n.g2)("LayersTab");return(0,n.uX)(),(0,n.CE)("div",he,[t[0]||(t[0]=(0,n.Lk)("div",{class:"p-3"},[(0,n.Lk)("h1",{class:"my-font-size-lg my-letter-spacing-lg text-center m-3"},"臺北市長照資訊")],-1)),(0,n.Lk)("div",ve,[(0,n.bF)(i)])])}const we={class:"h-100 d-flex flex-column overflow-hidden my-bgcolor-gray-100"},De={class:"flex-grow-1 overflow-auto layer-list-container",ref:"layerListRef"},xe={class:"mb-3"},Le={class:"d-flex align-items-center pb-2"},Ce={class:"my-title-xs-gray"},ke=["onClick"],Ne={class:"w-100"},Ie={class:"d-flex"},Te={class:"d-flex align-items-center text-start w-100 px-3 py-2"},$e={class:"my-content-sm-black"},Ee={class:"my-content-xs-gray ms-2"},Fe={class:"d-flex align-items-center justify-content-center px-3 py-2"},Oe=["id","checked","disabled","onChange"],ze=["for"],Pe={key:0,class:"px-3 pb-2"},Se={class:"my-content-xs-black text-nowrap ms-2"};function Me(e,t,a,o,l,r){return(0,n.uX)(),(0,n.CE)("div",we,[(0,n.Lk)("div",De,[(0,n.Lk)("div",xe,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.layers,(e=>((0,n.uX)(),(0,n.CE)("div",{key:e.groupName,class:"p-3"},[(0,n.Lk)("div",Le,[(0,n.Lk)("div",Ce,(0,g.v_)(e.groupName),1)]),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(e.groupLayers,(e=>((0,n.uX)(),(0,n.CE)("div",{key:e.layerId,class:"mb-1"},[(0,n.Lk)("div",{class:"btn rounded-0 border-0 d-flex shadow-sm my-bgcolor-white-hover p-0",onClick:t=>o.toggleLayer(e.layerId)},[(0,n.Lk)("div",{class:(0,g.C4)(["d-flex",`my-bgcolor-${e.colorName}`]),style:{"min-width":"6px"}},null,2),(0,n.Lk)("div",Ne,[(0,n.Lk)("div",Ie,[(0,n.Lk)("div",Te,[(0,n.Lk)("span",$e,[(0,n.eW)((0,g.v_)(e.layerName)+" ",1),(0,n.Lk)("span",Ee,(0,g.v_)(e.summaryData?.totalCount),1)])]),(0,n.Lk)("div",Fe,[(0,n.Lk)("input",{type:"checkbox",id:"switch-"+e.layerId,checked:e.visible,disabled:e.isLoading,onChange:t=>o.toggleLayer(e.layerId)},null,40,Oe),(0,n.Lk)("label",{for:"switch-"+e.layerId},null,8,ze)])]),e.legendData&&e.visible?((0,n.uX)(),(0,n.CE)("div",Pe,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(e.legendData,(e=>((0,n.uX)(),(0,n.CE)("div",{key:e.color,class:"d-flex align-items-center"},[(0,n.Lk)("div",{style:(0,g.Tr)([{"min-width":"6px","min-height":"18px"},{backgroundColor:e.color}])},null,4),(0,n.Lk)("div",Se,(0,g.v_)(e.label),1)])))),128))])):(0,n.Q3)("",!0)])],8,ke)])))),128))])))),128))])],512)])}const Re={add:{zh:"新增",en:"Add",icon:"fas fa-plus"},edit:{zh:"編輯",en:"Edit",icon:"fas fa-edit"},delete:{zh:"刪除",en:"Delete",icon:"fas fa-trash"},save:{zh:"儲存",en:"Save",icon:"fas fa-save"},cancel:{zh:"取消",en:"Cancel",icon:"fas fa-times"},confirm:{zh:"確認",en:"Confirm",icon:"fas fa-check"},search:{zh:"搜尋",en:"Search",icon:"fas fa-search"},filter:{zh:"篩選",en:"Filter",icon:"fas fa-filter"},sort:{zh:"排序",en:"Sort",icon:"fas fa-sort"},refresh:{zh:"重新整理",en:"Refresh",icon:"fas fa-sync-alt"},upload:{zh:"上傳",en:"Upload",icon:"fas fa-upload"},download:{zh:"下載",en:"Download",icon:"fas fa-download"},import:{zh:"匯入",en:"Import",icon:"fas fa-file-import"},export:{zh:"匯出",en:"Export",icon:"fas fa-file-export"},home:{zh:"首頁",en:"Home",icon:"fas fa-home"},back:{zh:"返回",en:"Back",icon:"fas fa-arrow-left"},forward:{zh:"前進",en:"Forward",icon:"fas fa-arrow-right"},up:{zh:"向上",en:"Up",icon:"fas fa-arrow-up"},down:{zh:"向下",en:"Down",icon:"fas fa-arrow-down"},success:{zh:"成功",en:"Success",icon:"fas fa-check-circle"},error:{zh:"錯誤",en:"Error",icon:"fas fa-exclamation-circle"},warning:{zh:"警告",en:"Warning",icon:"fas fa-exclamation-triangle"},info:{zh:"資訊",en:"Info",icon:"fas fa-info-circle"},loading:{zh:"載入中",en:"Loading",icon:"fas fa-spinner"},view:{zh:"檢視",en:"View",icon:"fas fa-eye"},hide:{zh:"隱藏",en:"Hide",icon:"fas fa-eye-slash"},expand:{zh:"展開",en:"Expand",icon:"fas fa-expand"},collapse:{zh:"收縮",en:"Collapse",icon:"fas fa-compress"},layer:{zh:"圖層",en:"Layer",icon:"fas fa-layer-group"},visible:{zh:"可見",en:"Visible",icon:"fas fa-eye"},hidden:{zh:"隱藏",en:"Hidden",icon:"fas fa-eye-slash"},data:{zh:"資料",en:"Data",icon:"fas fa-database"},table:{zh:"表格",en:"Table",icon:"fas fa-table"},map:{zh:"地圖",en:"Map",icon:"fas fa-map"},location:{zh:"位置",en:"Location",icon:"fas fa-map-marker-alt"},zoom_in:{zh:"放大",en:"Zoom In",icon:"fas fa-search-plus"},zoom_out:{zh:"縮小",en:"Zoom Out",icon:"fas fa-search-minus"},center:{zh:"居中",en:"Center",icon:"fas fa-crosshairs"},chart:{zh:"圖表",en:"Chart",icon:"fas fa-chart-bar"},statistics:{zh:"統計",en:"Statistics",icon:"fas fa-chart-line"},dashboard:{zh:"儀表板",en:"Dashboard",icon:"fas fa-tachometer-alt"},analysis:{zh:"分析",en:"Analysis",icon:"fas fa-analytics"},hospital:{zh:"醫院",en:"Hospital",icon:"fas fa-hospital"},clinic:{zh:"診所",en:"Clinic",icon:"fas fa-clinic-medical"},pharmacy:{zh:"藥局",en:"Pharmacy",icon:"fas fa-pills"},elderly_care:{zh:"長照",en:"Elderly Care",icon:"fas fa-hands-helping"},medical:{zh:"醫療",en:"Medical",icon:"fas fa-user-md"},population:{zh:"人口",en:"Population",icon:"fas fa-users"},demographics:{zh:"人口統計",en:"Demographics",icon:"fas fa-user-friends"},community:{zh:"社區",en:"Community",icon:"fas fa-home"},income:{zh:"收入",en:"Income",icon:"fas fa-dollar-sign"},tax:{zh:"稅收",en:"Tax",icon:"fas fa-file-invoice-dollar"},drag:{zh:"拖拉",en:"Drag",icon:"fa-solid fa-grip-lines-vertical"},move_up:{zh:"上移",en:"Move Up",icon:"fas fa-arrow-up"},move_down:{zh:"下移",en:"Move Down",icon:"fas fa-arrow-down"},settings:{zh:"設定",en:"Settings",icon:"fas fa-cog"},sort_up:{zh:"升序",en:"Sort Ascending",icon:"fas fa-sort-up"},sort_down:{zh:"降序",en:"Sort Descending",icon:"fas fa-sort-down"},folder:{zh:"資料夾",en:"Folder",icon:"fas fa-folder"},folder_open:{zh:"開啟資料夾",en:"Open Folder",icon:"fas fa-folder-open"},file:{zh:"檔案",en:"File",icon:"fas fa-file"},information:{zh:"資訊",en:"Information",icon:"fas fa-info-circle"},alert:{zh:"警告",en:"Warning",icon:"fas fa-exclamation-triangle"},failure:{zh:"錯誤",en:"Error",icon:"fas fa-times-circle"},complete:{zh:"成功",en:"Success",icon:"fas fa-check-circle"},reset:{zh:"重設",en:"Reset",icon:"fas fa-undo"},menu:{zh:"選單",en:"Menu",icon:"fas fa-bars"},close:{zh:"關閉",en:"Close",icon:"fas fa-times"}};function Ae(e,t="zh"){const a=Re[e];return a?{text:a[t]||a.zh,icon:a.icon}:(console.warn(`找不到圖標定義: ${e}`),{text:e,icon:"fas fa-question-circle"})}var _e={name:"LayersTab",setup(){const e=le(),t=(0,c.KR)(null),a=(0,n.EW)((()=>e.layers)),o=t=>{console.log("🔘 LayersTab: 切換圖層",t),e.toggleLayerVisibility(t)};return{layers:a,toggleLayer:o,layerListRef:t,getIcon:Ae}}};const Ve=(0,p.A)(_e,[["render",Me],["__scopeId","data-v-264eabf7"]]);var Je=Ve,He={name:"LeftView",components:{LayersTab:Je},setup(){return{}}};const We=(0,p.A)(He,[["render",be]]);var je=We;const Be={class:"my-right-panel h-100 d-flex flex-column overflow-hidden"},Xe={class:"flex-grow-1 overflow-auto"},Ke={class:"h-100"};function Ue(e,t,a,l,r,i){const s=(0,n.g2)("PropertiesTab");return(0,n.uX)(),(0,n.CE)("div",Be,[(0,n.Lk)("div",Xe,[(0,n.bo)((0,n.Lk)("div",Ke,[(0,n.bF)(s,{"selected-feature":l.selectedFeature,onHighlightFeature:t[0]||(t[0]=t=>e.$emit("highlight-feature",t))},null,8,["selected-feature"])],512),[[o.aG,"properties"===a.activeRightTab]])])])}const Ge={class:"h-100 flex-grow-1 d-flex flex-column my-bgcolor-gray-200"},Qe={key:0,class:"my-bgcolor-white h-100"},Ye={class:"p-3"},qe={class:"my-title-xs-gray mb-3"},Ze={class:"my-title-xs-gray mb-3"},et={class:"my-title-xs-gray mb-3"},tt={class:"my-content-sm-black fw-bold mb-2"},at={class:"my-title-xs-gray mb-3"},ot={class:"my-content-sm-black fw-bold mb-2"},lt={class:"badge bg-primary me-2"},nt={class:"mb-3 p-2 border rounded bg-light"},rt={class:"badge bg-success me-2"},it={class:"badge bg-primary me-2"},st={key:0,class:"badge bg-secondary me-2"},ct={class:"my-content-sm-black"},ut={class:"text-muted ms-2"},pt={key:1,class:"flex-grow-1 d-flex align-items-center justify-content-center"};function dt(e,t,a,o,l,r){const i=(0,n.g2)("DetailItem");return(0,n.uX)(),(0,n.CE)("div",Ge,[o.selectedFeature?((0,n.uX)(),(0,n.CE)("div",Qe,[(0,n.Lk)("div",null,[o.selectedLayer?((0,n.uX)(),(0,n.CE)("div",{key:0,class:(0,g.C4)(`my-bgcolor-${o.selectedLayer.colorName}`),style:{minHeight:"4px"}},null,2)):(0,n.Q3)("",!0),(0,n.Lk)("div",Ye,[(0,n.bF)(i,{label:"圖層",value:o.layerName},null,8,["value"]),o.hasProperties?((0,n.uX)(!0),(0,n.CE)(n.FK,{key:0},(0,n.pI)(o.selectedFeature.properties.propertyData,((e,t)=>((0,n.uX)(),(0,n.Wv)(i,{key:t,label:r.formatLabel(t),value:r.formatValue(e)},null,8,["label","value"])))),128)):(0,n.Q3)("",!0),(o.isAnalysisObject||o.isIsochroneAnalysisObject)&&(o.pointsInRange.length>0||o.polygonInRange.length>0)?((0,n.uX)(),(0,n.CE)(n.FK,{key:1},[o.pointsInRange.length>0?((0,n.uX)(),(0,n.CE)(n.FK,{key:0},[t[0]||(t[0]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),(0,n.Lk)("div",qe,"範圍內點物件 "+(0,g.v_)(o.pointsInRange.length),1),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.pointsInRange,((e,t)=>((0,n.uX)(),(0,n.Wv)(i,{key:t,label:e.properties.layerName,value:`${e.properties.name} (${e.distance}m)`},null,8,["label","value"])))),128))],64)):(0,n.Q3)("",!0),o.polygonInRange.length>0?((0,n.uX)(),(0,n.CE)(n.FK,{key:1},[t[1]||(t[1]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),(0,n.Lk)("div",Ze,"範圍內面域物件 "+(0,g.v_)(o.polygonInRange.length),1),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.polygonInRange,((e,t)=>((0,n.uX)(),(0,n.Wv)(i,{key:t,label:e.properties.layerName,value:e.properties.name},null,8,["label","value"])))),128))],64)):(0,n.Q3)("",!0)],64)):(0,n.Q3)("",!0),o.isRoutePlanningLine&&o.routePlanningDetails?((0,n.uX)(),(0,n.CE)(n.FK,{key:2},[t[3]||(t[3]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[4]||(t[4]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"路線信息",-1)),(0,n.bF)(i,{label:"路線名稱",value:o.routePlanningDetails.routeInfo.name},null,8,["value"]),(0,n.bF)(i,{label:"路線編號",value:`路線 ${o.routePlanningDetails.routeInfo.routeNumber}`},null,8,["value"]),(0,n.bF)(i,{label:"總距離",value:`${o.routePlanningDetails.routeInfo.distance} 公里`},null,8,["value"]),(0,n.bF)(i,{label:"預估時間",value:`${o.routePlanningDetails.routeInfo.duration} 分鐘`},null,8,["value"]),(0,n.bF)(i,{label:"交通方式",value:"driving-car"===o.routePlanningDetails.routeInfo.profile?"駕車":o.routePlanningDetails.routeInfo.profile},null,8,["value"]),(0,n.bF)(i,{label:"路徑點數",value:`${o.routePlanningDetails.routeInfo.waypoints} 個`},null,8,["value"]),(0,n.bF)(i,{label:"起點",value:o.routePlanningDetails.routeInfo.startPointName},null,8,["value"]),(0,n.bF)(i,{label:"終點",value:o.routePlanningDetails.routeInfo.endPointName},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(o.routePlanningDetails.routeInfo.createdAt)},null,8,["value"]),o.routePlanningDetails.routePoints.length>0?((0,n.uX)(),(0,n.CE)(n.FK,{key:0},[t[2]||(t[2]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),(0,n.Lk)("div",et," 路徑點詳細 "+(0,g.v_)(o.routePlanningDetails.routePoints.length),1),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.routePlanningDetails.routePoints,((e,t)=>((0,n.uX)(),(0,n.CE)("div",{key:t,class:"mb-3 p-2 border rounded"},[(0,n.Lk)("div",tt,(0,g.v_)(e.name),1),(0,n.bF)(i,{label:"順序",value:`第 ${e.order} 個路徑點`},null,8,["value"]),(0,n.bF)(i,{label:"緯度",value:e.latitude.toFixed(6)},null,8,["value"]),(0,n.bF)(i,{label:"經度",value:e.longitude.toFixed(6)},null,8,["value"]),(0,n.bF)(i,{label:"坐標",value:`[${e.coordinates[1].toFixed(6)}, ${e.coordinates[0].toFixed(6)}]`},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(e.createdAt)},null,8,["value"])])))),128))],64)):(0,n.Q3)("",!0)],64)):(0,n.Q3)("",!0),o.isRoutePlanningPoint?((0,n.uX)(),(0,n.CE)(n.FK,{key:3},[t[5]||(t[5]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[6]||(t[6]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"路徑點信息",-1)),(0,n.bF)(i,{label:"點名稱",value:o.selectedFeature.properties.name},null,8,["value"]),(0,n.bF)(i,{label:"順序",value:`第 ${o.selectedFeature.properties.order} 個路徑點`},null,8,["value"]),(0,n.bF)(i,{label:"狀態",value:"completed"===o.selectedFeature.properties.status?"已完成":"規劃中"},null,8,["value"]),"completed"===o.selectedFeature.properties.status?((0,n.uX)(),(0,n.CE)(n.FK,{key:0},[(0,n.bF)(i,{label:"所屬路線",value:`路線 ${o.selectedFeature.properties.routeNumber}`},null,8,["value"]),(0,n.bF)(i,{label:"路線ID",value:o.selectedFeature.properties.routeId},null,8,["value"])],64)):(0,n.Q3)("",!0),t[7]||(t[7]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[8]||(t[8]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"坐標信息",-1)),(0,n.bF)(i,{label:"緯度",value:o.selectedFeature.properties.latitude?.toFixed(6)||"N/A"},null,8,["value"]),(0,n.bF)(i,{label:"經度",value:o.selectedFeature.properties.longitude?.toFixed(6)||"N/A"},null,8,["value"]),(0,n.bF)(i,{label:"GeoJSON坐標",value:`[${o.selectedFeature.properties.latitude?.toFixed(6)||"N/A"}, ${o.selectedFeature.properties.longitude?.toFixed(6)||"N/A"}]`},null,8,["value"]),t[9]||(t[9]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[10]||(t[10]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"其他屬性",-1)),(0,n.bF)(i,{label:"要素ID",value:o.selectedFeature.properties.id},null,8,["value"]),(0,n.bF)(i,{label:"圖層ID",value:o.selectedFeature.properties.layerId},null,8,["value"]),(0,n.bF)(i,{label:"要素類型",value:o.selectedFeature.properties.type},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(o.selectedFeature.properties.createdAt)},null,8,["value"])],64)):(0,n.Q3)("",!0),o.isRouteOptimizationLine&&o.routeOptimizationDetails?((0,n.uX)(),(0,n.CE)(n.FK,{key:4},[t[14]||(t[14]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[15]||(t[15]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"優化路線信息",-1)),(0,n.bF)(i,{label:"路線名稱",value:o.routeOptimizationDetails.routeInfo.name},null,8,["value"]),(0,n.bF)(i,{label:"路線編號",value:`優化路線 ${o.routeOptimizationDetails.routeInfo.routeNumber}`},null,8,["value"]),(0,n.bF)(i,{label:"總距離",value:`${o.routeOptimizationDetails.routeInfo.distance} 公里`},null,8,["value"]),(0,n.bF)(i,{label:"預估時間",value:`${o.routeOptimizationDetails.routeInfo.duration} 分鐘`},null,8,["value"]),(0,n.bF)(i,{label:"交通方式",value:"driving-car"===o.routeOptimizationDetails.routeInfo.profile?"駕車":o.routeOptimizationDetails.routeInfo.profile},null,8,["value"]),(0,n.bF)(i,{label:"優化點數",value:`${o.routeOptimizationDetails.routeInfo.waypoints} 個`},null,8,["value"]),(0,n.bF)(i,{label:"車輛ID",value:o.routeOptimizationDetails.routeInfo.vehicleId||"N/A"},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(o.routeOptimizationDetails.routeInfo.createdAt)},null,8,["value"]),o.routeOptimizationDetails.routePoints.length>0?((0,n.uX)(),(0,n.CE)(n.FK,{key:0},[t[11]||(t[11]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),(0,n.Lk)("div",at," 優化點詳細 "+(0,g.v_)(o.routeOptimizationDetails.routePoints.length),1),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.routeOptimizationDetails.routePoints,((e,t)=>((0,n.uX)(),(0,n.CE)("div",{key:t,class:"mb-3 p-2 border rounded"},[(0,n.Lk)("div",ot,[(0,n.Lk)("span",lt,(0,g.v_)(e.order),1),(0,n.eW)(" "+(0,g.v_)(e.name),1)]),(0,n.bF)(i,{label:"順序",value:`第 ${e.order} 個優化點`},null,8,["value"]),(0,n.bF)(i,{label:"緯度",value:e.latitude.toFixed(6)},null,8,["value"]),(0,n.bF)(i,{label:"經度",value:e.longitude.toFixed(6)},null,8,["value"]),(0,n.bF)(i,{label:"坐標",value:`[${e.coordinates[1].toFixed(6)}, ${e.coordinates[0].toFixed(6)}]`},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(e.createdAt)},null,8,["value"])])))),128))],64)):(0,n.Q3)("",!0),o.routeOptimizationDetails.optimizedPointInfo&&o.routeOptimizationDetails.optimizedPointInfo.length>0?((0,n.uX)(),(0,n.CE)(n.FK,{key:1},[t[12]||(t[12]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[13]||(t[13]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"優化訪問順序",-1)),(0,n.Lk)("div",nt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(o.routeOptimizationDetails.optimizedPointInfo,((e,t)=>((0,n.uX)(),(0,n.CE)("div",{key:t,class:"mb-2"},[(0,n.Lk)("span",rt,"訪問順序 "+(0,g.v_)(e.visitOrder||t+1),1),(0,n.Lk)("span",it,"優化點 "+(0,g.v_)(e.order),1),e.stepType?((0,n.uX)(),(0,n.CE)("span",st,(0,g.v_)("start"===e.stepType?"起點":"end"===e.stepType?"終點":"job"===e.stepType?"任務":e.stepType),1)):(0,n.Q3)("",!0),(0,n.Lk)("span",ct,[(0,n.eW)((0,g.v_)(e.name)+" ",1),(0,n.Lk)("small",ut," ("+(0,g.v_)(e.coordinates[1].toFixed(6))+", "+(0,g.v_)(e.coordinates[0].toFixed(6))+") ",1)])])))),128))])],64)):(0,n.Q3)("",!0)],64)):(0,n.Q3)("",!0),o.isRouteOptimizationPoint?((0,n.uX)(),(0,n.CE)(n.FK,{key:5},[t[16]||(t[16]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[17]||(t[17]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"優化點信息",-1)),(0,n.bF)(i,{label:"點名稱",value:`${o.selectedFeature.properties.order}. ${o.selectedFeature.properties.name}`},null,8,["value"]),(0,n.bF)(i,{label:"順序",value:`第 ${o.selectedFeature.properties.order} 個優化點`},null,8,["value"]),(0,n.bF)(i,{label:"狀態",value:"completed"===o.selectedFeature.properties.status?"已完成":"規劃中"},null,8,["value"]),"completed"===o.selectedFeature.properties.status?((0,n.uX)(),(0,n.CE)(n.FK,{key:0},[(0,n.bF)(i,{label:"所屬路線",value:`優化路線 ${o.selectedFeature.properties.routeNumber}`},null,8,["value"]),(0,n.bF)(i,{label:"路線ID",value:o.selectedFeature.properties.routeId},null,8,["value"])],64)):(0,n.Q3)("",!0),t[18]||(t[18]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[19]||(t[19]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"坐標信息",-1)),(0,n.bF)(i,{label:"緯度",value:o.selectedFeature.geometry.coordinates[1]?.toFixed(6)||"N/A"},null,8,["value"]),(0,n.bF)(i,{label:"經度",value:o.selectedFeature.geometry.coordinates[0]?.toFixed(6)||"N/A"},null,8,["value"]),(0,n.bF)(i,{label:"GeoJSON坐標",value:`[${o.selectedFeature.geometry.coordinates[1].toFixed(6)}, ${o.selectedFeature.geometry.coordinates[0].toFixed(6)}]`},null,8,["value"]),t[20]||(t[20]=(0,n.Lk)("hr",{class:"my-3"},null,-1)),t[21]||(t[21]=(0,n.Lk)("div",{class:"my-title-xs-gray mb-3"},"其他屬性",-1)),(0,n.bF)(i,{label:"要素ID",value:o.selectedFeature.properties.id},null,8,["value"]),(0,n.bF)(i,{label:"圖層ID",value:o.selectedFeature.properties.layerId},null,8,["value"]),(0,n.bF)(i,{label:"要素類型",value:o.selectedFeature.properties.type},null,8,["value"]),(0,n.bF)(i,{label:"建立時間",value:o.formatDateTime(o.selectedFeature.properties.createdAt)},null,8,["value"])],64)):(0,n.Q3)("",!0)])])])):((0,n.uX)(),(0,n.CE)("div",pt,t[22]||(t[22]=[(0,n.Lk)("div",{class:"text-center"},[(0,n.Lk)("div",{class:"my-title-md-gray p-3"},"沒有點擊地圖上的物件")],-1)])))])}const mt={class:"pb-2"},yt={class:"my-title-xs-gray pb-1"},gt={class:"my-content-sm-black pb-1"};function ft(e,t,a,o,l,r){return(0,n.uX)(),(0,n.CE)("div",mt,[(0,n.Lk)("div",yt,(0,g.v_)(a.label),1),(0,n.Lk)("div",gt,(0,g.v_)(a.value),1)])}var ht={name:"DetailItem",props:{label:{type:String,required:!0},value:{type:[String,Number,Boolean,Object],required:!0}}};const vt=(0,p.A)(ht,[["render",ft],["__scopeId","data-v-0cd54acc"]]);var bt=vt,wt={name:"PropertiesTab",components:{DetailItem:bt},setup(){const e=le(),t=(0,n.EW)((()=>e.selectedFeature)),a=(0,n.EW)((()=>{if(!t.value?.properties?.layerId)return null;const a=t.value.properties.layerId,o=e.findLayerById(a);return o})),o=(0,n.EW)((()=>{if(!t.value?.properties?.layerId)return null;const a=t.value.properties.layerId,o=e.findLayerById(a);return o?o.layerName:a})),l=(0,n.EW)((()=>!!t.value?.properties?.propertyData&&Object.keys(t.value.properties.propertyData).length>0)),r=(0,n.EW)((()=>"analysis-layer"===t.value?.properties?.layerId)),i=(0,n.EW)((()=>"isochrone-analysis-layer"===t.value?.properties?.layerId)),s=(0,n.EW)((()=>"route-planning-layer"===t.value?.properties?.layerId)),c=(0,n.EW)((()=>s.value&&"route-line"===t.value?.properties?.type)),u=(0,n.EW)((()=>s.value&&"route-planning-point"===t.value?.properties?.type)),p=(0,n.EW)((()=>"route-optimization-layer"===t.value?.properties?.layerId)),d=(0,n.EW)((()=>p.value&&"optimized-route-line"===t.value?.properties?.type)),m=(0,n.EW)((()=>p.value&&"optimization-point"===t.value?.properties?.type)),y=(0,n.EW)((()=>{if(!c.value)return null;const a=t.value,o=a.properties.id,l=a.properties.routeNumber,n=e.findLayerById("route-planning-layer");if(!n)return null;const r=n.geoJsonData.features.filter((e=>"route-planning-point"===e.properties.type&&e.properties.routeId===o)).sort(((e,t)=>e.properties.order-t.properties.order));return{routeInfo:{id:o,name:a.properties.name,routeNumber:l,distance:a.properties.distance,duration:a.properties.duration,profile:a.properties.profile,waypoints:a.properties.waypoints,startPointName:a.properties.startPointName,endPointName:a.properties.endPointName,createdAt:a.properties.createdAt},routePoints:r.map((e=>({order:e.properties.order,name:e.properties.name,latitude:e.properties.latitude,longitude:e.properties.longitude,coordinates:e.geometry.coordinates,createdAt:e.properties.createdAt})))}})),g=(0,n.EW)((()=>{if(!d.value)return null;const e=t.value,a=e.properties.id,o=e.properties.routeNumber,l=e.properties.optimizedPointInfo||[];return{routeInfo:{id:a,name:e.properties.name,routeNumber:o,distance:e.properties.distance,duration:e.properties.duration,profile:e.properties.profile,waypoints:e.properties.waypoints,vehicleId:e.properties.vehicleId,createdAt:e.properties.createdAt},routePoints:l.map((t=>({order:t.order,name:t.name,latitude:t.coordinates[1],longitude:t.coordinates[0],coordinates:t.coordinates,createdAt:e.properties.createdAt}))),optimizedOrder:e.properties.optimizedOrder||[],optimizedPointInfo:l}})),f=(0,n.EW)((()=>(r.value||i.value)&&t.value?.properties?.pointsInRange||[])),h=(0,n.EW)((()=>(r.value||i.value)&&t.value?.properties?.polygonInRange||[])),v=(0,n.EW)((()=>{const e=f.value.map((e=>({...e,objectType:"point"}))),t=h.value.map((e=>({...e,objectType:"polygon"})));return[...e,...t]})),b=(0,n.EW)((()=>(r.value||i.value)&&t.value?.properties?.layerStats||{})),w=(0,n.EW)((()=>(r.value||i.value)&&t.value?.properties?.polygonStats||{})),D=(0,n.EW)((()=>{const e={...b.value};return Object.entries(w.value).forEach((([t,a])=>{const o=`${t} (多邊形)`;e[o]=a})),e})),x=e=>{if(!e)return"N/A";try{return new Date(e).toLocaleString("zh-TW")}catch(t){return console.warn("日期格式化失敗:",t),e}};return{selectedFeature:t,selectedLayer:a,layerName:o,hasProperties:l,isAnalysisObject:r,isIsochroneAnalysisObject:i,isRoutePlanningObject:s,isRoutePlanningLine:c,isRoutePlanningPoint:u,routePlanningDetails:y,isRouteOptimizationObject:p,isRouteOptimizationLine:d,isRouteOptimizationPoint:m,routeOptimizationDetails:g,pointsInRange:f,polygonInRange:h,allObjectsInRange:v,layerStats:b,polygonStats:w,combinedStats:D,formatDateTime:x}},methods:{formatLabel(e){const t={PTVNAME:"區域名稱","中位數":"中位數",name:"名稱",count:"數量",area:"面積",population:"人口",density:"密度","分析點名稱":"分析點名稱","分析範圍名稱":"分析範圍名稱","緯度":"緯度","經度":"經度","中心緯度":"中心緯度","中心經度":"中心經度","分析半徑":"分析半徑","建立時間":"建立時間","關聯分析點":"關聯分析點"};return t[e]||e},formatValue(e){return"number"===typeof e?e.toLocaleString():e}}};const Dt=(0,p.A)(wt,[["render",dt]]);var xt=Dt,Lt={name:"RightView",components:{PropertiesTab:xt},props:{activeRightTab:{type:String,default:"results"},analysisList:{type:Array,default:()=>[]},selectedAnalysisId:{type:[Number,String],default:null},rightViewWidth:{type:Number,default:250}},emits:["update:activeRightTab","select-analysis","view-analysis","delete-analysis","highlight-feature"],setup(e){const t=le(),a=()=>e.analysisList.filter((e=>"完成"===e.status)).length;(0,n.wB)((()=>t.selectedFeature),(e=>{console.log("RightView - selectedFeature changed:",{newFeature:e,properties:e?.properties,store:t})}),{immediate:!0});const o=(0,n.EW)((()=>{const e=t.selectedFeature;return console.log("RightView - Computing selectedFeature:",{feature:e,properties:e?.properties}),e}));return{getActiveAnalysisCount:a,selectedFeature:o}}};const Ct=(0,p.A)(Lt,[["render",Ue]]);var kt=Ct;const Nt={class:"d-flex flex-column my-bgcolor-gray-200 h-100"},It={class:"flex-grow-1 overflow-hidden position-relative"},Tt={class:"position-absolute top-0 start-0 m-3",style:{"z-index":"1000"}},$t={class:"d-flex align-items-center rounded-pill shadow my-blur gap-1 p-2"},Et={class:"h-100"},Ft={ref:"dashboardContainerRef",class:"h-100 overflow-auto pt-5"};function Ot(e,t,a,l,r,i){const s=(0,n.g2)("MapTab"),c=(0,n.g2)("DashboardTab");return(0,n.uX)(),(0,n.CE)("div",Nt,[(0,n.Lk)("div",It,[(0,n.Lk)("div",Tt,[(0,n.Lk)("div",$t,[(0,n.Lk)("button",{class:(0,g.C4)(["btn rounded-circle border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs",{"my-btn-blue":"map"===a.activeUpperTab}]),onClick:t[0]||(t[0]=t=>e.$emit("update:activeUpperTab","map")),style:{width:"30px",height:"30px"},title:"地圖視圖"},t[8]||(t[8]=[(0,n.Lk)("i",{class:"fas fa-map"},null,-1)]),2),(0,n.Lk)("button",{class:(0,g.C4)(["btn rounded-circle border-0 d-flex align-items-center justify-content-center my-btn-transparent my-font-size-xs",{"my-btn-blue":"dashboard"===a.activeUpperTab}]),onClick:t[1]||(t[1]=t=>e.$emit("update:activeUpperTab","dashboard")),style:{width:"30px",height:"30px"},title:"資料儀表板"},t[9]||(t[9]=[(0,n.Lk)("i",{class:"fas fa-chart-bar"},null,-1)]),2)])]),(0,n.bo)((0,n.Lk)("div",Et,[(0,n.bF)(s,{ref:"MapTab",showTainanLayer:a.showTainanLayer,selectedFilter:a.selectedFilter,zoomLevel:a.zoomLevel,maxCount:e.maxCount,"onUpdate:zoomLevel":t[2]||(t[2]=t=>e.$emit("update:zoomLevel",t)),"onUpdate:currentCoords":t[3]||(t[3]=t=>e.$emit("update:currentCoords",t)),"onUpdate:activeMarkers":t[4]||(t[4]=t=>e.$emit("update:activeMarkers",t)),onFeatureSelected:t[5]||(t[5]=t=>e.$emit("feature-selected",t)),onOpenDistanceModal:t[6]||(t[6]=(t,a)=>e.$emit("open-distance-modal",t,a)),onOpenIsochroneModal:t[7]||(t[7]=(t,a)=>e.$emit("open-isochrone-modal",t,a))},null,8,["showTainanLayer","selectedFilter","zoomLevel","maxCount"])],512),[[o.aG,"map"===a.activeUpperTab]]),(0,n.bo)((0,n.Lk)("div",Ft,[t[10]||(t[10]=(0,n.Lk)("div",{style:{height:"40px"}},null,-1)),(0,n.bF)(c,{ref:"DashboardTab",containerHeight:a.contentHeight,isPanelDragging:a.isPanelDragging,activeMarkers:a.activeMarkers},null,8,["containerHeight","isPanelDragging","activeMarkers"])],512),[[o.aG,"dashboard"===a.activeUpperTab]])])])}const zt=["id"],Pt={class:"position-absolute map-bottom-controls d-flex align-items-center rounded-pill shadow my-blur gap-2 p-2 mb-3"},St={class:"d-flex align-items-center"},Mt={class:"dropdown dropup"},Rt={class:"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},At={class:"dropdown-menu"},_t=["onClick"],Vt=["disabled"];function Jt(e,t,a,l,r,i){return(0,n.uX)(),(0,n.CE)("div",{id:"map-container",class:(0,g.C4)(["h-100 w-100 position-relative",{"click-mode-active":l.isClickMode,"isochrone-click-mode-active":l.isIsochroneClickMode,"route-planning-click-mode-active":l.isRoutePlanningClickMode,"route-optimization-click-mode-active":l.isRouteOptimizationClickMode}])},[(0,n.Lk)("div",{id:l.mapContainerId,ref:"mapContainer",class:"h-100 w-100"},null,8,zt),l.showContextMenu?((0,n.uX)(),(0,n.CE)("div",{key:0,ref:"contextMenu",class:"position-fixed rounded my-bgcolor-white my-font-size-sm shadow-sm",style:(0,g.Tr)({left:l.contextMenuPosition.x+"px",top:l.contextMenuPosition.y+"px",zIndex:1e4}),onClick:t[1]||(t[1]=(0,o.D$)((()=>{}),["stop"]))},[(0,n.Lk)("div",{class:"context-menu-item d-flex align-items-center my-bgcolor-white-hover my-title-sm-black px-3 py-2 my-2",onClick:t[0]||(t[0]=(...e)=>l.deleteAnalysisPoint&&l.deleteAnalysisPoint(...e))},t[13]||(t[13]=[(0,n.Lk)("span",{class:"my-color-red"},[(0,n.Lk)("i",{class:"fas fa-trash-alt me-2"})],-1),(0,n.eW)(" 刪除此分析點 ")]))],4)):(0,n.Q3)("",!0),l.showContextMenu?((0,n.uX)(),(0,n.CE)("div",{key:1,class:"context-menu-overlay position-fixed w-100 h-100",style:{top:"0",left:"0","z-index":"9999"},onClick:t[2]||(t[2]=(...e)=>l.hideContextMenu&&l.hideContextMenu(...e))})):(0,n.Q3)("",!0),(0,n.Lk)("div",Pt,[(0,n.Lk)("div",St,[(0,n.Lk)("div",Mt,[(0,n.Lk)("button",Rt,(0,g.v_)(l.getBasemapLabel(l.selectedBasemap)),1),(0,n.Lk)("ul",At,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(l.defineStore.basemaps,(e=>((0,n.uX)(),(0,n.CE)("li",{key:e.value},[(0,n.Lk)("a",{class:"dropdown-item my-content-xs-black py-1",href:"#",onClick:(0,o.D$)((t=>l.changeBasemap(e.value)),["prevent"])},(0,g.v_)(e.label),9,_t)])))),128))])])]),(0,n.Lk)("button",{class:"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[3]||(t[3]=(...e)=>l.showAllFeatures&&l.showAllFeatures(...e)),disabled:!l.isAnyLayerVisible,title:"顯示圖面所有資料範圍"}," 顯示全部 ",8,Vt),(0,n.Lk)("button",{class:"btn rounded-pill border-0 my-btn-transparent my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[4]||(t[4]=(...e)=>l.showFullCity&&l.showFullCity(...e)),title:"回到預設地圖範圍"}," 顯示全市 "),l.isClickMode?((0,n.uX)(),(0,n.CE)("button",{key:1,class:"btn rounded-pill border-0 my-btn-red my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[6]||(t[6]=(...e)=>l.stopClickMode&&l.stopClickMode(...e)),title:"取消地圖點選"}," 取消地圖點選 ")):((0,n.uX)(),(0,n.CE)("button",{key:0,class:"btn rounded-pill border-0 my-btn-green my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[5]||(t[5]=(...e)=>l.startClickMode&&l.startClickMode(...e)),title:"在地圖上點選位置進行數據分析"}," 點選數據分析位置 ")),l.isIsochroneClickMode?((0,n.uX)(),(0,n.CE)("button",{key:3,class:"btn rounded-pill border-0 my-btn-red my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[8]||(t[8]=(...e)=>l.stopIsochroneClickMode&&l.stopIsochroneClickMode(...e)),title:"取消等時圈分析點選"}," 取消等時圈點選 ")):((0,n.uX)(),(0,n.CE)("button",{key:2,class:"btn rounded-pill border-0 my-btn-blue my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[7]||(t[7]=(...e)=>l.startIsochroneClickMode&&l.startIsochroneClickMode(...e)),title:"在地圖上點選位置進行等時圈分析"}," 點選等時分析位置 ")),l.isRoutePlanningClickMode?((0,n.uX)(),(0,n.CE)("button",{key:5,class:"btn rounded-pill border-0 my-btn-red my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[10]||(t[10]=(...e)=>l.finishRoutePlanningClickMode&&l.finishRoutePlanningClickMode(...e)),title:"完成路徑規劃點選"}," 路徑規劃點選完成 ")):((0,n.uX)(),(0,n.CE)("button",{key:4,class:"btn rounded-pill border-0 my-btn-orange my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[9]||(t[9]=(...e)=>l.startRoutePlanningClickMode&&l.startRoutePlanningClickMode(...e)),title:"在地圖上點選多個位置進行路徑規劃"}," 點選路徑規劃點 ")),l.isRouteOptimizationClickMode?((0,n.uX)(),(0,n.CE)("button",{key:7,class:"btn rounded-pill border-0 my-btn-red my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[12]||(t[12]=(...e)=>l.finishRouteOptimizationClickMode&&l.finishRouteOptimizationClickMode(...e)),title:"完成路徑優化點選"}," 路徑優化點選完成 ")):((0,n.uX)(),(0,n.CE)("button",{key:6,class:"btn rounded-pill border-0 my-btn-purple my-font-size-xs text-nowrap my-cursor-pointer",onClick:t[11]||(t[11]=(...e)=>l.startRouteOptimizationClickMode&&l.startRouteOptimizationClickMode(...e)),title:"在地圖上點選多個位置進行路徑優化"}," 點選路徑優化點 "))])],2)}var Ht=a(6886),Wt=a.n(Ht);const jt=(0,l.nY)("define",{state:()=>({selectedBasemap:"carto_light_labels",mapView:{center:[25.051474,121.557989],zoom:11},basemaps:[{label:"OpenStreetMap",value:"osm",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},{label:"Esri Street",value:"esri_street",url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}"},{label:"Esri Topo",value:"esri_topo",url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}"},{label:"Esri World Imagery",value:"esri_imagery",url:"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"},{label:"Google Maps 街道",value:"google_road",url:"https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}"},{label:"Google Maps 衛星",value:"google_satellite",url:"https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}"},{label:"國土規劃中心電子地圖",value:"nlsc_emap",url:"https://wmts.nlsc.gov.tw/wmts/EMAP/default/GoogleMapsCompatible/{z}/{y}/{x}"},{label:"國土規劃中心正射影像",value:"nlsc_photo",url:"https://wmts.nlsc.gov.tw/wmts/PHOTO2/default/GoogleMapsCompatible/{z}/{y}/{x}"},{label:"地形圖",value:"terrain",url:"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png"},{label:"Carto Light",value:"carto_light_labels",url:"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png"},{label:"Carto Dark",value:"carto_dark_labels",url:"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png"},{label:"Carto Voyager",value:"carto_voyager",url:"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png"},{label:"白色地圖",value:"blank",url:""},{label:"黑色底圖",value:"black",url:""}]}),actions:{setSelectedBasemap(e){this.selectedBasemap=e},setMapView(e,t){this.mapView.center=e,this.mapView.zoom=t}}});var Bt=a(7024),Xt=a(1071),Kt=a(8249);delete Wt().Icon.Default.prototype._getIconUrl,Wt().Icon.Default.mergeOptions({iconRetinaUrl:Kt,iconUrl:Bt,shadowUrl:Xt});var Ut={name:"MapTab",props:{zoomLevel:{type:Number,default:11},isPanelDragging:{type:Boolean,default:!1}},emits:["update:zoomLevel","update:currentCoords","update:activeMarkers","feature-selected","open-distance-modal","open-isochrone-modal"],setup(e,{emit:t}){const a=le(),o=jt(),l=(0,c.KR)(null);let r=null,i=null,s={},u=(0,c.KR)(!1),p=(0,c.KR)(!1),d=(0,c.KR)(!1),m=(0,c.KR)(!1);const y=(0,c.KR)(null),g=(0,c.KR)(!1),f=(0,c.KR)({x:0,y:0}),h=(0,c.KR)(null),v=(0,c.KR)(!1),b=(0,c.KR)(`leaflet-map-${Math.random().toString(36).substr(2,9)}`),w=(0,n.EW)((()=>a.getAllLayers().some((e=>e.visible&&e.geoJsonData)))),D=()=>{if(!l.value)return!1;const e=l.value.getBoundingClientRect();if(0===e.width||0===e.height)return console.warn("[MapTab] 容器尺寸為零，延遲初始化"),!1;try{if(r=Wt().map(l.value,{center:o.mapView.center,zoom:o.mapView.zoom,zoomControl:!1,attributionControl:!1}),r.on("zoomend",x),r.on("moveend",L),r.on("click",(function(e){return u.value?(e.originalEvent.stopPropagation(),t("open-distance-modal",e.latlng.lat,e.latlng.lng),!1):p.value?(e.originalEvent.stopPropagation(),t("open-isochrone-modal",e.latlng.lat,e.latlng.lng),!1):d.value?(e.originalEvent.stopPropagation(),A(e.latlng.lat,e.latlng.lng),!1):m.value?(e.originalEvent.stopPropagation(),H(e.latlng.lat,e.latlng.lng),!1):void(e.originalEvent.target.closest(".leaflet-interactive")||(a.setSelectedFeature(null),N()))})),r.getPane("popupPane").style.zIndex=2200,v.value=!0,u.value){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("click-mode-active")}else if(p.value){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("isochrone-click-mode-active")}else if(d.value){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("route-planning-click-mode-active")}return console.log("[MapTab] 地圖創建成功"),!0}catch(n){return console.error("[MapTab] 地圖創建失敗:",n),!1}},x=()=>{if(r){const e=r.getZoom(),a=r.getCenter();o.setMapView([a.lat,a.lng],e),t("update:zoomLevel",e)}},L=()=>{if(r){const e=r.getCenter(),a=r.getZoom();o.setMapView([e.lat,e.lng],a),t("update:currentCoords",e)}},C=()=>{if(!r||!v.value)return;i&&(r.removeLayer(i),i=null);const e=o.basemaps.find((e=>e.value===o.selectedBasemap));e&&e.url&&(i=Wt().tileLayer(e.url,{attribution:""}),i.addTo(r));const t=l.value;t&&("blank"===o.selectedBasemap?t.style.backgroundColor="var(--my-color-white)":"black"===o.selectedBasemap?t.style.backgroundColor="var(--my-color-gray-800)":t.style.backgroundColor="transparent")},k=e=>{if(!e.geoJsonData)return null;const{layerName:o,colorName:l,type:n}=e,r=Wt().geoJSON(e.geoJsonData,{pointToLayer:(t,a)=>{if(e.isAnalysisLayer){if("point-analysis"===t.properties.type){const e=Wt().divIcon({html:'\n                  <div class="d-flex align-items-center justify-content-center my-color-green my-font-size-sm">\n                    <i class="fas fa-plus"></i>\n                  </div>\n                  ',className:"analysis-point-icon",iconSize:[16,16],iconAnchor:[8,8],popupAnchor:[0,-8]}),t=Wt().marker(a,{icon:e});return t}if("circle-analysis"===t.properties.type){const e=Wt().circle(a,{radius:t.properties.radius,color:"var(--my-color-green)",weight:1,opacity:.8,fillColor:"var(--my-color-green)",fillOpacity:.2});return e}}else if(e.isIsochroneAnalysisLayer){if("isochrone-point-analysis"===t.properties.type){const e=Wt().divIcon({html:'\n                  <div class="d-flex align-items-center justify-content-center my-color-blue my-font-size-sm">\n                    <i class="fas fa-plus"></i>\n                  </div>\n                  ',className:"isochrone-analysis-point-icon",iconSize:[16,16],iconAnchor:[8,8],popupAnchor:[0,-8]}),t=Wt().marker(a,{icon:e});return t}if("isochrone-circle-analysis"===t.properties.type){const e=Wt().circle(a,{radius:t.properties.radius,color:"var(--my-color-blue)",weight:1,opacity:.8,fillColor:"var(--my-color-blue)",fillOpacity:.2});return e}}else if(e.isRoutePlanningLayer){if("route-planning-point"===t.properties.type){const e=t.properties.order||1,o="completed"===t.properties.status,l=o?"var(--my-color-gray-500)":"var(--my-color-orange)",n=o?"var(--my-color-gray-400)":"white",r=o?"var(--my-color-gray-200)":"var(--my-color-white)",i=Wt().divIcon({html:`\n                  <div class="d-flex align-items-center justify-content-center my-font-size-xs fw-bold"\n                       style="background: ${l}; color: ${r}; border-radius: 50%; width: 20px; height: 20px; border: 2px solid ${n}; box-shadow: 0 2px 4px rgba(0,0,0,0.3);">\n                    ${e}\n                  </div>\n                  `,className:"route-planning-point-icon "+(o?"completed":"active"),iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[0,-12]}),s=Wt().marker(a,{icon:i});return s}}else if(e.isRouteOptimizationLayer){if("optimization-point"===t.properties.type){const e=t.properties.order||1,o="completed"===t.properties.status,l=o?"var(--my-color-gray-500)":"var(--my-color-purple)",n=o?"var(--my-color-gray-400)":"white",r=o?"var(--my-color-gray-200)":"var(--my-color-white)",i=Wt().divIcon({html:`\n                  <div class="d-flex align-items-center justify-content-center my-font-size-xs fw-bold"\n                       style="background: ${l}; color: ${r}; border-radius: 50%; width: 20px; height: 20px; border: 2px solid ${n}; box-shadow: 0 2px 4px rgba(0,0,0,0.3);">\n                    ${e}\n                  </div>\n                  `,className:"route-optimization-point-icon "+(o?"completed":"active"),iconSize:[24,24],iconAnchor:[12,12],popupAnchor:[0,-12]}),s=Wt().marker(a,{icon:i});return s}}else if("point"===n){const e=Wt().divIcon({html:`<div\n                class="rounded-circle"\n                style="\n                   background-color: var(--my-color-${l});\n                   width: 8px;\n                   height: 8px;\n                   box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n                 ">\n                 </div>`,className:"",iconSize:[8,8],iconAnchor:[4,4],popupAnchor:[0,-4]});return Wt().marker(a,{icon:e})}return null},style:t=>e.isRoutePlanningLayer&&"route-line"===t.properties.type?{color:"var(--my-color-orange)",weight:4,opacity:.8,lineCap:"round",lineJoin:"round",dashArray:null}:e.isRouteOptimizationLayer&&"optimized-route-line"===t.properties.type?{color:"var(--my-color-purple)",weight:4,opacity:.8,lineCap:"round",lineJoin:"round",dashArray:null}:e.isIsochroneAnalysisLayer&&"isochrone-polygon-analysis"===t.properties.type?{color:"var(--my-color-blue)",weight:2,opacity:.8,fillColor:"var(--my-color-blue)",fillOpacity:.3}:"polygon"==e.type?{fillColor:t.properties.fillColor,weight:1,opacity:1,color:t.properties.color||"white",fillOpacity:t.properties.fillColor?.6:0}:void 0,onEachFeature:(e,l)=>{if(l.isAnalysisLayer)l.bindPopup(`\n                <div class="">\n                  <div class="my-title-xs-gray pb-2">${o}</div>\n                  <div class="my-content-sm-black">${e.properties.name}</div>\n                </div>\n              `,{className:"analysis-popup",offset:[0,-5],closeButton:!0,autoClose:!1,closeOnClick:!1});else if(l.isIsochroneAnalysisLayer)l.bindPopup(`\n                <div class="">\n                  <div class="my-title-xs-gray pb-2">${o}</div>\n                  <div class="my-content-sm-black">${e.properties.name}</div>\n                </div>\n              `,{className:"isochrone-analysis-popup",offset:[0,-5],closeButton:!0,autoClose:!1,closeOnClick:!1});else if(l.isRoutePlanningLayer)if("route-planning-point"===e.properties.type){const t="completed"===e.properties.status,a=t?`\n                  <div class="">\n                    <div class="my-title-xs-gray pb-2">${o}</div>\n                    <div class="my-content-sm-black">${e.properties.name}</div>\n                    <div class="my-content-xs-gray pt-1">順序: ${e.properties.order}</div>\n                    <div class="my-content-xs-gray">所屬路線: 路線 ${e.properties.routeNumber}</div>\n                    <div class="my-content-xs-gray">狀態: 已完成</div>\n                  </div>\n                `:`\n                  <div class="">\n                    <div class="my-title-xs-gray pb-2">${o}</div>\n                    <div class="my-content-sm-black">${e.properties.name}</div>\n                    <div class="my-content-xs-gray pt-1">順序: ${e.properties.order}</div>\n                    <div class="my-content-xs-gray">狀態: 規劃中</div>\n                  </div>\n                `;l.bindPopup(a,{className:"route-planning-popup "+(t?"completed":"active"),offset:[0,-5],closeButton:!0,autoClose:!1,closeOnClick:!1})}else"route-line"===e.properties.type&&l.bindPopup(`\n                  <div class="">\n                    <div class="my-title-xs-gray pb-2">${o}</div>\n                    <div class="my-content-sm-black">${e.properties.name}</div>\n                    <div class="my-content-xs-gray pt-1">總距離: ${e.properties.distance} 公里</div>\n                    <div class="my-content-xs-gray">預估時間: ${e.properties.duration} 分鐘</div>\n                    <div class="my-content-xs-gray">路徑點數: ${e.properties.waypoints} 個</div>\n                  </div>\n                `,{className:"route-planning-popup route-line-popup",offset:[0,-5],closeButton:!0,autoClose:!1,closeOnClick:!1});else l.bindPopup(`\n                <div class="">\n                  <div class="my-title-xs-gray pb-2">${o}</div>\n                  <div class="my-content-sm-black">${e.properties.name}</div>\n                </div>\n              `);l.on({mouseover:function(){if(!(u.value||p.value||d.value))if(l.isAnalysisLayer||"analysis-layer"===e.properties.layerId){if("point-analysis"===e.properties.type)return;"circle-analysis"===e.properties.type&&(this._originalStyle||(this._originalStyle={weight:this.options.weight,color:this.options.color,fillOpacity:this.options.fillOpacity}),this.setStyle({weight:2,fillOpacity:.4}))}else if(l.isIsochroneAnalysisLayer||"isochrone-analysis-layer"===e.properties.layerId){if("isochrone-point-analysis"===e.properties.type)return;"isochrone-circle-analysis"===e.properties.type?(this._originalStyle||(this._originalStyle={weight:this.options.weight,color:this.options.color,fillOpacity:this.options.fillOpacity}),this.setStyle({weight:2,fillOpacity:.4})):"isochrone-polygon-analysis"===e.properties.type&&(this._originalStyle||(this._originalStyle={weight:this.options.weight,color:this.options.color,fillOpacity:this.options.fillOpacity}),this.setStyle({weight:3,fillOpacity:.5}))}else if(l.isRoutePlanningLayer||"route-planning-layer"===e.properties.layerId){if("route-planning-point"===e.properties.type)return;"route-line"===e.properties.type&&(this._originalStyle||(this._originalStyle={weight:this.options.weight,color:this.options.color,opacity:this.options.opacity}),this.setStyle({weight:6,opacity:1,color:"var(--my-color-orange-hover)"}),this.bringToFront())}else if("point"===n){const e=this.getElement();if(e){const t=e.querySelector("div");t&&(t.style.transition="transform 0.04s ease-in-out",t.style.transform="scale(1.6)")}}else"polygon"===n&&null!==e.properties.fillColor&&(this._originalStyle||(this._originalStyle={weight:this.options.weight,color:this.options.color,fillOpacity:this.options.fillOpacity}),this.setStyle({weight:4,color:"white",fillOpacity:.8}),this.bringToFront())},mouseout:function(){if(u.value||p.value||d.value)return;const t=a.selectedFeature&&a.selectedFeature.properties.id===e.properties.id;if(!t)if(l.isAnalysisLayer||"analysis-layer"===e.properties.layerId){if("point-analysis"===e.properties.type)return;"circle-analysis"===e.properties.type&&this._originalStyle&&this.setStyle(this._originalStyle)}else if(l.isIsochroneAnalysisLayer||"isochrone-analysis-layer"===e.properties.layerId){if("isochrone-point-analysis"===e.properties.type)return;"isochrone-circle-analysis"===e.properties.type?this._originalStyle&&this.setStyle(this._originalStyle):"isochrone-polygon-analysis"===e.properties.type&&this._originalStyle&&this.setStyle(this._originalStyle)}else if(l.isRoutePlanningLayer||"route-planning-layer"===e.properties.layerId){if("route-planning-point"===e.properties.type)return;"route-line"===e.properties.type&&this._originalStyle&&this.setStyle(this._originalStyle)}else if("point"===n){const e=this.getElement();if(e){const t=e.querySelector("div");t&&(t.style.transform="")}}else"polygon"===n&&(this._originalStyle?this.setStyle(this._originalStyle):r.resetStyle(this))},click:function(o){return u.value?(o.originalEvent.stopPropagation(),O(o.latlng.lat,o.latlng.lng),!1):p.value?(o.originalEvent.stopPropagation(),z(o.latlng.lat,o.latlng.lng),!1):d.value?(o.originalEvent.stopPropagation(),A(o.latlng.lat,o.latlng.lng),!1):m.value?(o.originalEvent.stopPropagation(),H(o.latlng.lat,o.latlng.lng),!1):void((!l.isAnalysisLayer&&"analysis-layer"!==e.properties.layerId||"point-analysis"!==e.properties.type)&&(!l.isIsochroneAnalysisLayer&&"isochrone-analysis-layer"!==e.properties.layerId||"isochrone-point-analysis"!==e.properties.type)&&(a.setSelectedFeature(e),t("feature-selected",e)))},contextmenu:function(t){!l.isAnalysisLayer&&"analysis-layer"!==e.properties.layerId||"circle-analysis"!==e.properties.type||B(t.originalEvent,e),!l.isIsochroneAnalysisLayer&&"isochrone-analysis-layer"!==e.properties.layerId||"isochrone-circle-analysis"!==e.properties.type&&"isochrone-polygon-analysis"!==e.properties.type||X(t.originalEvent,e)}})}});return r},N=()=>{Object.values(s).forEach((e=>{e&&e.eachLayer((t=>{const o=t.feature;if(o){const l=a.findLayerById(o.properties.layerId),n=l?.type;if(l?.isAnalysisLayer||"analysis-layer"===o.properties.layerId){if("point-analysis"===o.properties.type)return;"circle-analysis"===o.properties.type&&t._originalStyle&&t.setStyle(t._originalStyle)}else if("point"===n){const e=t.getElement();if(e){const t=e.querySelector("div");t&&(t.style.transform="")}}else"polygon"===n&&(t._originalStyle?t.setStyle(t._originalStyle):e.resetStyle&&e.resetStyle(t))}}))}))},I=()=>{if(!r||!v.value)return;const e=a.getAllLayers(),o=Object.keys(s),l=e.filter((e=>e.visible&&e.geoJsonData)),n=l.map((e=>e.layerId)),i=n.filter((e=>!o.includes(e))),c=o.filter((e=>!n.includes(e)));console.log(`🔄 圖層同步: 新增 ${i.length} 個, 移除 ${c.length} 個`),c.forEach((e=>{s[e]&&(r.removeLayer(s[e]),delete s[e],console.log(`🗺️ 移除圖層: ${e}`))}));const u=l.some((e=>e.isAnalysisLayer));u&&Object.keys(s).forEach((e=>{s[e]&&(r.removeLayer(s[e]),delete s[e])}));const p=[];if(l.slice().reverse().forEach((e=>{const{layerId:t}=e,a=u||!s[t];if(a)try{const a=k(e);a&&(e.isAnalysisLayer&&(a.isAnalysisLayer=!0),a.addTo(r),s[t]=a,i.includes(t)&&!e.isAnalysisLayer&&p.push(a),console.log(`🗺️ 圖層 "${e.layerName}" 已添加到地圖`))}catch(o){console.error(`添加圖層 "${e.layerName}" 時發生錯誤:`,o)}})),p.length>0){const e=new(Wt().LatLngBounds);let t=!1;p.forEach((a=>{if(a&&a.getBounds){const o=a.getBounds();o.isValid()&&(e.extend(o),t=!0)}})),t&&setTimeout((()=>{r.fitBounds(e,{padding:[50,50]}),console.log(`🎯 自動縮放到新添加的 ${p.length} 個圖層範圍`)}),200)}const d=Object.values(s).reduce(((e,t)=>e+(t.getLayers?t.getLayers().length:0)),0);t("update:activeMarkers",d),console.log(`🗺️ 圖層同步完成，共 ${l.length} 個可見圖層`)},T=()=>{if(!r||!v.value||!w.value)return;const e=new(Wt().LatLngBounds);let t=!1;Object.values(s).forEach((a=>{if(a&&a.getBounds){const o=a.getBounds();o.isValid()&&(e.extend(o),t=!0)}})),t&&r.fitBounds(e,{padding:[50,50]})},$=()=>{if(!r||!v.value)return;const e=[25.051474,121.557989],t=11;console.log(`🌍 顯示全市: 中心點 ${e}, 縮放等級 ${t}`),r.setView(e,t),o.setMapView(e,t)},E=e=>{if(console.log("🎯 開始高亮顯示要素:",e),!r||!v.value)return console.warn("⚠️ 地圖尚未準備就緒，延遲執行高亮顯示"),void setTimeout((()=>E(e)),200);if(!s||0===Object.keys(s).length)return console.warn("⚠️ 圖層群組尚未載入，延遲執行高亮顯示"),void setTimeout((()=>E(e)),200);let t,o;"object"===typeof e&&null!==e?(t=e.layerId,o=e.id):o=e,console.log(`🔍 尋找要素: layerId="${t}", featureId="${o}"`),console.log("🔍 可用的圖層群組:",Object.keys(s));const l=()=>{N();let e=null,l=null;if(t&&s[t]){console.log(`🔍 在指定圖層 "${t}" 中尋找要素`);const a=s[t];a.eachLayer((a=>{const n=a.feature;if(n&&n.properties){const r=n.properties.id;if(console.log(`🔍 檢查要素 ID: ${r} (目標: ${o})`),String(r)===String(o))return e=a,l=n,void console.log(`✅ 在圖層 "${t}" 中找到要素 "${o}"`)}}))}else{console.log("🔍 在所有圖層中尋找要素");for(const[a,n]of Object.entries(s))if(console.log(`🔍 檢查圖層: ${a}`),n.eachLayer((n=>{const r=n.feature;if(r&&r.properties){const i=r.properties.id;if(console.log(`🔍 檢查要素 ID: ${i} (目標: ${o})`),String(i)===String(o))return e=n,l=r,t=a,void console.log(`✅ 在圖層 "${a}" 中找到要素 "${o}"`)}})),e)break}if(e&&l){if(a.setSelectedFeature(l),console.log("🎯 設置選中特徵到 store"),"Point"===e.feature?.geometry?.type){const t=e.getElement();if(t){const e=t.querySelector("div");e&&(e.style.transition="transform 0.04s ease-in-out",e.style.transform="scale(1.6)"),t.style.zIndex=1e3}}else e.setStyle&&(e.feature?.properties?.fillColor?e.setStyle({weight:4,color:"white",fillOpacity:.8}):e.setStyle({weight:4}));let t;if(e.bringToFront&&e.bringToFront(),e.getBounds)t=e.getBounds();else if(e.getLatLng){const a=e.getLatLng();t=Wt().latLngBounds([a,a])}return t&&t.isValid()&&(r.fitBounds(t,{maxZoom:16,padding:[50,50]}),setTimeout((()=>{e.openPopup&&e.openPopup()}),500)),console.log("✅ 顯示位置功能完成"),!0}return console.warn(`❌ 找不到要素 "${o}"${t?` 在圖層 "${t}" 中`:""}`),!1},n=l();n||(console.log("🔄 第一次高亮顯示失敗，1秒後重試..."),setTimeout((()=>{const e=l();e||console.error("❌ 重試後仍無法高亮顯示要素")}),1e3))},F=()=>{r&&v.value?(0,n.dY)((()=>{try{if(l.value){const e=l.value.getBoundingClientRect();if(0===e.width||0===e.height)return console.warn("🔄 地圖容器尺寸為零，嘗試重新初始化地圖"),void setTimeout((()=>{if(l.value){const e=l.value.getBoundingClientRect();(e.width>0||e.height>0)&&(r.invalidateSize(),console.log("🗺️ 地圖尺寸已重新初始化"))}}),100)}r.invalidateSize(),console.log("🗺️ 地圖尺寸已刷新")}catch(e){console.error("❌ 刷新地圖尺寸時發生錯誤:",e)}})):r||(console.warn("🔄 地圖實例不存在，嘗試重新初始化"),setTimeout((()=>{ee()}),200))},O=(e,t)=>{a.addAnalysisPoint(e,t)},z=async(e,t)=>{try{await a.addIsochroneAnalysisPoint(e,t)}catch(o){console.error("添加等時圈分析點失敗:",o)}},P=()=>{if(p.value&&R(),d.value&&V(),u.value=!0,r){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("click-mode-active")}console.log("🖱️ 開始數據分析點擊模式（自動關閉等時圈分析模式）")},S=()=>{if(u.value=!1,r){const e=r.getContainer();e.style.cursor="",e.classList.remove("click-mode-active")}console.log("🛑 停止地圖點擊模式")},M=()=>{if(u.value&&S(),d.value&&V(),p.value=!0,r){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("isochrone-click-mode-active")}console.log("🖱️ 開始等時圈分析點擊模式（自動關閉數據分析模式）")},R=()=>{if(p.value=!1,r){const e=r.getContainer();e.style.cursor="",e.classList.remove("isochrone-click-mode-active")}console.log("🛑 停止等時圈分析點擊模式")},A=async(e,t)=>{try{const o=a.addRoutePlanningPoint(e,t);o&&console.log("🗺️ 成功添加路徑規劃點:",o)}catch(o){console.error("添加路徑規劃點失敗:",o)}},_=()=>{if(u.value&&S(),p.value&&R(),d.value=!0,r){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("route-planning-click-mode-active")}console.log("🖱️ 開始路徑規劃點擊模式（自動關閉其他分析模式）")},V=async()=>{if(d.value=!1,r){const e=r.getContainer();e.style.cursor="",e.classList.remove("route-planning-click-mode-active")}const e=a.getRoutePlanningCoordinates();if(console.log(`🛑 完成路徑規劃點選，共選擇了 ${e.length} 個路徑點`),e.length>=2){console.log("📍 路徑規劃點坐標:",e),console.log("🚀 開始計算最佳路線...");try{const e=await a.calculateAndDrawRoute("driving-car");e?(console.log("✅ 路徑規劃成功完成！"),console.log(`📏 路線總距離: ${e.distance} 公里`),console.log(`⏱️ 預估行車時間: ${e.duration} 分鐘`),console.log("🚗 交通方式: 駕車"),console.log(`🎉 路線 ${e.routeNumber||"新增"} 已保存完成`),console.log("📍 可以繼續添加下一條路線")):(console.warn("⚠️ 路徑規劃計算失敗"),alert("路徑規劃失敗，請檢查路徑點是否有效或網路連線。"))}catch(t){console.error("❌ 路徑規劃過程中發生錯誤:",t),alert(`路徑規劃失敗: ${t.message}`)}}else 1===e.length?(console.log("⚠️ 路徑規劃至少需要2個點，目前只有1個點"),alert("路徑規劃至少需要2個路徑點，請添加更多路徑點。")):(console.log("⚠️ 沒有選擇任何路徑規劃點"),alert("請先在地圖上選擇路徑點。"))},J=()=>{a.clearAnalysisLayer(),console.log("🗑️ 清除分析圖層")},H=async(e,t)=>{try{const o=a.addRouteOptimizationPoint(e,t);o&&console.log("🗺️ 成功添加路徑優化點:",o)}catch(o){console.error("添加路徑優化點失敗:",o)}},W=()=>{if(u.value&&S(),p.value&&R(),d.value&&V(),m.value=!0,r){const e=r.getContainer();e.style.cursor="crosshair",e.classList.add("route-optimization-click-mode-active")}a.clearRouteOptimizationLayer(),console.log("🖱️ 開始路徑優化點擊模式（自動關閉其他分析模式）")},j=async()=>{if(!m.value)return void console.warn("⚠️ 當前不在路徑優化點擊模式");if(m.value=!1,u.value=!1,p.value=!1,d.value=!1,r){const e=r.getContainer();e.style.cursor="",e.classList.remove("route-optimization-click-mode-active")}const e=a.getRouteOptimizationCoordinates();if(e.length>=2){console.log(`🛑 完成路徑優化點選，共選擇了 ${e.length} 個優化點`);try{const t=await a.calculateAndDrawOptimizedRoute();t?(console.log("✅ 路徑優化成功完成！"),console.log("📍 路徑優化點坐標:",e),console.log("📏 優化後距離:",t.distance,"公里"),console.log("⏱️ 優化後時間:",t.duration,"分鐘"),console.log("🔄 優化順序:",t.optimizedOrder),console.log(`🎉 優化路線 ${t.routeNumber||"新增"} 已保存完成`),console.log("📍 可以繼續添加下一條優化路線")):(console.warn("⚠️ 路徑優化計算失敗"),alert("路徑優化失敗，請檢查優化點是否有效或網路連線。"))}catch(t){console.error("❌ 路徑優化過程中發生錯誤:",t),alert(`路徑優化失敗: ${t.message}`)}}else 1===e.length?(console.log("⚠️ 路徑優化至少需要2個點，目前只有1個點"),alert("路徑優化至少需要2個優化點，請添加更多優化點。")):console.log("⚠️ 沒有選擇任何路徑優化點")},B=(e,t)=>{e.preventDefault(),e.stopPropagation(),h.value=t,f.value={x:e.pageX||e.clientX,y:e.pageY||e.clientY},g.value=!0,console.log("🖱️ 顯示分析要素右鍵菜單:",t.properties.name)},X=(e,t)=>{e.preventDefault(),e.stopPropagation(),h.value=t,f.value={x:e.pageX||e.clientX,y:e.pageY||e.clientY},g.value=!0,console.log("🖱️ 顯示等時圈分析要素右鍵菜單:",t.properties.name)},K=()=>{if(!h.value)return;const e=h.value,t=e.properties.layerId;let o;o="circle-analysis"===e.properties.type||"isochrone-circle-analysis"===e.properties.type||"isochrone-polygon-analysis"===e.properties.type?e.properties.id:e.properties.parentId,o&&("analysis-layer"===t?(a.deleteAnalysisPoint(o),console.log("🗑️ 刪除分析點:",o)):"isochrone-analysis-layer"===t&&(a.deleteIsochroneAnalysisPoint(o),console.log("🗑️ 刪除等時圈分析點:",o)),U())},U=()=>{g.value=!1,h.value=null};let G=null,Q=null;const Y=()=>{l.value&&window.ResizeObserver&&(G=new ResizeObserver((e=>{for(let t of e)console.log("🔄 地圖容器大小變化:",t.contentRect),Q&&clearTimeout(Q),Q=setTimeout((()=>{r&&v.value&&F(),Q=null}),150)})),G.observe(l.value),console.log("✅ ResizeObserver 已設置"))},q=e=>{o.setSelectedBasemap(e),C()},Z=e=>{const t=o.basemaps.find((t=>t.value===e));return t?t.label:e},ee=()=>{let e=0;const t=20,a=()=>{e>=t?console.error("[MapTab] 地圖初始化超時"):(e++,D()?(C(),I()):setTimeout(a,100))};a()};return(0,n.sV)((()=>{(0,n.dY)((()=>{setTimeout((()=>{ee(),setTimeout(Y,500)}),100)})),document.addEventListener("click",U)})),(0,n.hi)((()=>{Q&&(clearTimeout(Q),Q=null),G&&(G.disconnect(),G=null,console.log("🧹 ResizeObserver 已清理")),r&&(r.off("zoomend",x),r.off("moveend",L),r.remove(),r=null),s={},i=null,v.value=!1,document.removeEventListener("click",U)})),(0,n.wB)((()=>a.layers),I,{deep:!0}),(0,n.wB)((()=>o.selectedBasemap),(()=>{v.value&&C()})),{mapContainer:l,mapContainerId:b,selectedBasemap:(0,n.EW)((()=>o.selectedBasemap)),changeBasemap:q,getBasemapLabel:Z,showAllFeatures:T,showFullCity:$,isAnyLayerVisible:w,highlightFeature:E,invalidateSize:F,startClickMode:P,stopClickMode:S,startIsochroneClickMode:M,stopIsochroneClickMode:R,startRoutePlanningClickMode:_,finishRoutePlanningClickMode:V,startRouteOptimizationClickMode:W,finishRouteOptimizationClickMode:j,clearAnalysisLayer:J,isClickMode:u,isIsochroneClickMode:p,isRoutePlanningClickMode:d,isRouteOptimizationClickMode:m,defineStore:o,contextMenu:y,showContextMenu:g,contextMenuPosition:f,selectedAnalysisFeature:h,deleteAnalysisPoint:K,hideContextMenu:U}}};const Gt=(0,p.A)(Ut,[["render",Jt],["__scopeId","data-v-41d5dd3b"]]);var Qt=Gt;const Yt={class:"d-flex flex-column my-bgcolor-gray-200 h-100"},qt={key:0,class:""},Zt={class:"nav nav-tabs nav-fill"},ea=["onClick"],ta={class:"my-title-sm-black"},aa={key:1,class:"flex-grow-1 overflow-auto my-bgcolor-white p-3"},oa={class:"mb-4"},la={class:"my-title-md-black"},na={key:0},ra={class:"row"},ia={class:"col-12 col-xl-6"},sa={class:"rounded-4 my-bgcolor-gray-100 p-4 mb-3"},ca={class:"row"},ua={class:"col-6"},pa={class:"text-center"},da={class:"my-title-xl-black"},ma={key:0,class:"col-6"},ya={class:"text-center"},ga={class:"my-title-xl-black"},fa={key:0,class:"col-12 col-xl-6"},ha={class:"rounded-4 my-bgcolor-gray-100 p-4 mb-3"},va={key:1,class:"text-center py-5"},ba={key:2,class:"flex-grow-1 d-flex align-items-center justify-content-center"};var wa={__name:"DashboardTab",setup(e){const t=le(),a=(0,c.KR)(null),o=(0,c.KR)(null),l=(0,n.EW)((()=>{const e=t.getAllLayers();return e.filter((e=>e.visible))})),r=e=>{a.value=e},i=(0,n.EW)((()=>{if(!a.value)return null;const e=l.value.find((e=>e.layerId===a.value));return e&&e.summaryData||null})),s=(0,n.EW)((()=>{if(!a.value)return"無開啟圖層";const e=l.value.find((e=>e.layerId===a.value));return e?e.layerName||"未知圖層":"無開啟圖層"})),u=e=>{if(!o.value||!e||0===e.length)return;M.Ltv(o.value).selectAll("*").remove();const t={top:0,right:48,bottom:16,left:48},a=o.value.clientWidth,l=a-t.left-t.right,n=8,r=24,i=e.length*r,s=M.Ltv(o.value).append("svg").attr("width",a).attr("height",i+t.top+t.bottom),c=s.append("g").attr("transform",`translate(${t.left},${t.top})`),u=M.T9B(e,(e=>e.count)),p=M.m4Y().domain([0,u]).range([0,l]),d=e=>{let t;const a=5,o=Math.ceil(e/(a-1));t=o<=5?5:o<=10?10:o<=20?20:o<=50?50:o<=100?100:5*Math.ceil(o/5);const l=Math.ceil(e/t)*t,n=[];for(let r=0;r<=l&&n.length<a;r+=t)n.push(r);return{ticks:n,maxValue:l,interval:t}},m=d(u),y=m.ticks;p.domain([0,m.maxValue]),c.selectAll(".grid-line").data(y).enter().append("line").attr("class","grid-line").attr("x1",(e=>p(e))).attr("x2",(e=>p(e))).attr("y1",0).attr("y2",i).attr("stroke","var(--my-color-gray-400)").attr("stroke-dasharray","2,2").attr("stroke-width",1),c.selectAll(".bar").data(e).enter().append("rect").attr("class","bar").attr("x",0).attr("y",((e,t)=>t*r+(r-n)/2)).attr("width",(e=>p(e.count))).attr("height",n).attr("fill","var(--my-color-blue)"),c.selectAll(".label").data(e).enter().append("text").attr("class","label my-font-size-xs").attr("x",(e=>p(e.count)+5)).attr("y",((e,t)=>t*r+r/2)).attr("dy","0.35em").attr("fill","var(--my-color-black)").text((e=>e.count)),c.selectAll(".district-label").data(e).enter().append("text").attr("class","district-label my-font-size-xs").attr("x",-5).attr("y",((e,t)=>t*r+r/2)).attr("dy","0.35em").attr("fill","var(--my-color-black)").style("text-anchor","end").text((e=>e.name)),c.selectAll(".x-axis-label").data(y).enter().append("text").attr("class","x-axis-label my-font-size-xs").attr("x",(e=>p(e))).attr("y",i+15).attr("fill","var(--my-color-gray-600)").style("text-anchor","middle").text((e=>e))},p=(0,c.KR)([]);(0,n.wB)((()=>l.value),(e=>{if(0===e.length)return a.value=null,void(p.value=[]);const t=p.value.map((e=>e.layerId)),o=e.map((e=>e.layerId)),l=o.filter((e=>!t.includes(e)));if(l.length>0){const t=l[l.length-1];a.value=t,console.log(`🔄 自動切換到新開啟的圖層: ${e.find((e=>e.layerId===t))?.layerName}`)}else a.value&&e.find((e=>e.layerId===a.value))||(a.value=e[0].layerId);p.value=[...e]}),{deep:!0,immediate:!0}),(0,n.wB)((()=>i.value),(e=>{e&&e.districtCount&&(0,n.dY)((()=>{u(e.districtCount)}))}),{immediate:!0}),(0,n.sV)((()=>{console.log("[DashboardTab] Component Mounted"),l.value.length>0&&!a.value&&(a.value=l.value[0].layerId)}));const d=()=>{i.value&&i.value.districtCount&&(0,n.dY)((()=>{u(i.value.districtCount)}))};return(0,n.sV)((()=>{window.addEventListener("resize",d)})),(0,n.hi)((()=>{window.removeEventListener("resize",d)})),(e,t)=>((0,n.uX)(),(0,n.CE)("div",Yt,[l.value.length>0?((0,n.uX)(),(0,n.CE)("div",qt,[(0,n.Lk)("ul",Zt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(l.value,(e=>((0,n.uX)(),(0,n.CE)("li",{key:e.layerId,class:"nav-item d-flex flex-column align-items-center"},[(0,n.Lk)("div",{class:(0,g.C4)(["btn nav-link rounded-0 border-0 position-relative d-flex align-items-center justify-content-center my-bgcolor-gray-200",{active:a.value===e.layerId}]),onClick:t=>r(e.layerId)},[(0,n.Lk)("span",ta,(0,g.v_)(e.layerName),1)],10,ea),(0,n.Lk)("div",{class:(0,g.C4)(["w-100",`my-bgcolor-${e.colorName}`]),style:{"min-height":"4px"}},null,2)])))),128))])])):(0,n.Q3)("",!0),l.value.length>0?((0,n.uX)(),(0,n.CE)("div",aa,[(0,n.Lk)("div",oa,[(0,n.Lk)("h5",la,(0,g.v_)(s.value),1)]),i.value?((0,n.uX)(),(0,n.CE)("div",na,[(0,n.Lk)("div",ra,[(0,n.Lk)("div",ia,[(0,n.Lk)("div",sa,[t[2]||(t[2]=(0,n.Lk)("h6",{class:"mb-3"},"基本統計",-1)),(0,n.Lk)("div",ca,[(0,n.Lk)("div",ua,[(0,n.Lk)("div",pa,[(0,n.Lk)("div",da,(0,g.v_)(i.value.totalCount),1),t[0]||(t[0]=(0,n.Lk)("div",{class:"my-title-sm-gray"},"總數量",-1))])]),i.value.districtCount?((0,n.uX)(),(0,n.CE)("div",ma,[(0,n.Lk)("div",ya,[(0,n.Lk)("div",ga,(0,g.v_)(i.value.districtCount.length),1),t[1]||(t[1]=(0,n.Lk)("div",{class:"my-title-sm-gray"},"行政區數量",-1))])])):(0,n.Q3)("",!0)])])]),i.value.districtCount&&i.value.districtCount.length>0?((0,n.uX)(),(0,n.CE)("div",fa,[(0,n.Lk)("div",ha,[t[3]||(t[3]=(0,n.Lk)("h6",{class:"mb-3"},"行政區分布",-1)),(0,n.Lk)("div",{ref_key:"chartContainer",ref:o,class:"w-100"},null,512)])])):(0,n.Q3)("",!0)])])):((0,n.uX)(),(0,n.CE)("div",va,t[4]||(t[4]=[(0,n.Lk)("div",{class:"my-title-md-gray"},"此圖層沒有可用的摘要資訊",-1)])))])):((0,n.uX)(),(0,n.CE)("div",ba,t[5]||(t[5]=[(0,n.Lk)("div",{class:"text-center"},[(0,n.Lk)("div",{class:"my-title-md-gray p-3"},"沒有開啟的圖層")],-1)])))]))}};const Da=wa;var xa=Da,La={name:"UpperView",components:{MapTab:Qt,DashboardTab:xa},props:{activeUpperTab:{type:String,default:"map"},mainPanelWidth:{type:Number,default:60},contentHeight:{type:Number,default:500},showTainanLayer:{type:Boolean,default:!1},selectedFilter:{type:String,default:""},zoomLevel:{type:Number,default:11},isPanelDragging:{type:Boolean,default:!1},activeMarkers:{type:Number,default:0}},emits:["update:activeUpperTab","update:zoomLevel","update:currentCoords","update:activeMarkers","feature-selected"],setup(e,{emit:t}){const a=(0,c.KR)(null),o=(0,c.KR)(null),l=(0,c.KR)(null);(0,n.wB)([()=>e.isPanelDragging,()=>e.activeUpperTab],(([e,t])=>{(0,n.dY)((()=>{l.value&&(e&&"dashboard"===t?(l.value.style.pointerEvents="none",console.log("MainContent: Dashboard container pointer-events set to none")):(l.value.style.pointerEvents="auto",console.log("MainContent: Dashboard container pointer-events set to auto (dragging:",e,", tab:",t,")")))}))}),{immediate:!0}),(0,n.wB)((()=>e.activeUpperTab),((t,o)=>{console.log("🔄 UpperView: Tab changed from",o,"to",t),"map"===t&&o&&"map"!==o&&(0,n.dY)((()=>{a.value&&(console.log("🗺️ UpperView: Refreshing map size after showing map tab"),setTimeout((()=>{a.value&&"map"===e.activeUpperTab&&(a.value.invalidateSize(),console.log("🗺️ UpperView: Map size refreshed successfully"))}),100))}))})),(0,n.wB)([()=>e.mainPanelWidth,()=>e.contentHeight],(()=>{(0,n.dY)((()=>{"map"===e.activeUpperTab&&a.value&&(a.value.invalidateSize(),setTimeout((()=>{a.value&&(a.value.invalidateSize(),console.log("🗺️ UpperView: Extra map size invalidation for responsive layout"))}),200))}))}));const r=o=>{console.log("🎯 UpperView: highlightFeature called with data:",o),"map"!==e.activeUpperTab?(t("update:activeUpperTab","map"),(0,n.dY)((()=>{a.value?.highlightFeature(o)}))):a.value?.highlightFeature(o)},i=()=>{"map"===e.activeUpperTab&&a.value&&a.value.resetView()},s=()=>{"map"===e.activeUpperTab&&a.value&&a.value.fitToTainanBounds()},u=()=>{"map"===e.activeUpperTab&&a.value&&a.value.invalidateSize()};return{MapTab:a,DashboardTab:o,dashboardContainerRef:l,highlightFeature:r,resetView:i,fitToTainanBounds:s,invalidateMapSize:u}}};const Ca=(0,p.A)(La,[["render",Ot]]);var ka=Ca;const Na={ref:"bottomTabContentRef",class:"flex-grow-1 h-100 overflow-auto"},Ia={class:"h-100"};function Ta(e,t,a,o,l,r){const i=(0,n.g2)("DataTableTab");return(0,n.uX)(),(0,n.CE)("div",{class:"d-flex flex-column",style:(0,g.Tr)({height:a.bottomViewHeight+"px"})},[(0,n.Lk)("div",Na,[(0,n.Lk)("div",Ia,[(0,n.bF)(i,{onHighlightOnMap:t[0]||(t[0]=t=>e.$emit("highlight-on-map",t))})])],512)],4)}const $a={class:"d-flex flex-column my-bgcolor-gray-200 h-100"},Ea={key:0,class:""},Fa={class:"nav nav-tabs nav-fill"},Oa=["onClick"],za={class:"my-title-sm-black"},Pa={key:0,class:"my-content-xs-gray ms-2"},Sa={key:1,class:"flex-grow-1 overflow-hidden"},Ma={class:"h-100 d-flex flex-column"},Ra={class:"flex-grow-1 overflow-auto"},Aa={class:"table w-100 mb-0"},_a={class:"sticky-top my-table-thead"},Va={class:"text-center text-nowrap"},Ja=["onClick"],Ha={class:"my-title-xs-gray text-nowrap"},Wa={class:"my-title-xs-gray text-nowrap ms-2"},ja=["onClick"],Ba={key:0,class:"border-0 text-nowrap text-truncate p-0",style:{"max-width":"80px"}},Xa={key:0,class:"d-flex p-0"},Ka={class:"my-content-xs-black w-100 px-3 py-2"},Ua={key:1,class:"my-content-xs-black px-3 py-2"},Ga={key:2,class:"flex-grow-1 d-flex align-items-center justify-content-center"};var Qa={__name:"DataTableTab",emits:["highlight-on-map"],setup(e,{emit:t}){const a=t,l=le(),r=(0,c.KR)(null),i=(0,c.KR)({}),s=(0,n.EW)((()=>{const e=l.getAllLayers();return e.filter((e=>e.visible))})),u=e=>{r.value=e},p=e=>{const t=m(e);if(!t||0===t.length)return[];const a=t[0];return Object.keys(a).filter((e=>{const t=a[e];return"object"!==typeof t||null===t}))},d=e=>e.tableData?.length||0,m=e=>{if(!e.tableData)return[];const t=i.value[e.layerId];return t&&t.key?[...e.tableData].sort(((e,a)=>{const o=e[t.key],l=a[t.key];return"string"===typeof o&&"string"===typeof l?"asc"===t.order?o.localeCompare(l):l.localeCompare(o):"asc"===t.order?o-l:l-o})):e.tableData},y=(e,t)=>{i.value[e]||(i.value[e]={key:null,order:"asc"});const a=i.value[e];a.key===t?a.order="asc"===a.order?"desc":"asc":(a.key=t,a.order="asc")},f=(e,t)=>{const a=i.value[e];return a&&a.key===t?"asc"===a.order?"fas fa-sort-up":"fas fa-sort-down":"fas fa-sort"},h=(e,t)=>{console.log("準備高亮顯示:",{item:e,layer:t.layerName});const o={id:e.id||e["#"],layerId:t.layerId,layerName:t.layerName,item:e};console.log("發送高亮事件:",o),setTimeout((()=>{a("highlight-on-map",o)}),50)},v=(0,c.KR)([]);return(0,n.wB)((()=>s.value),(e=>{if(0===e.length)return r.value=null,void(v.value=[]);const t=v.value.map((e=>e.layerId)),a=e.map((e=>e.layerId)),o=a.filter((e=>!t.includes(e)));if(o.length>0){const t=o[o.length-1];r.value=t,console.log(`🔄 自動切換到新開啟的圖層: ${e.find((e=>e.layerId===t))?.layerName}`)}else r.value&&e.find((e=>e.layerId===r.value))||(r.value=e[0].layerId);v.value=[...e]}),{deep:!0,immediate:!0}),(0,n.sV)((()=>{console.log("[MultiLayerDataTableTab] Component Mounted"),s.value.length>0&&!r.value&&(r.value=s.value[0].layerId)})),(e,t)=>((0,n.uX)(),(0,n.CE)("div",$a,[s.value.length>0?((0,n.uX)(),(0,n.CE)("div",Ea,[(0,n.Lk)("ul",Fa,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(s.value,(e=>((0,n.uX)(),(0,n.CE)("li",{key:e.layerId,class:"nav-item d-flex flex-column align-items-center"},[(0,n.Lk)("div",{class:(0,g.C4)(["btn nav-link rounded-0 border-0 position-relative d-flex align-items-center justify-content-center my-bgcolor-gray-200",{active:r.value===e.layerId}]),onClick:t=>u(e.layerId)},[(0,n.Lk)("span",za,[(0,n.eW)((0,g.v_)(e.layerName)+" ",1),d(e)?((0,n.uX)(),(0,n.CE)("span",Pa,(0,g.v_)(d(e)),1)):(0,n.Q3)("",!0)])],10,Oa),(0,n.Lk)("div",{class:(0,g.C4)(["w-100",`my-bgcolor-${e.colorName}`]),style:{"min-height":"4px"}},null,2)])))),128))])])):(0,n.Q3)("",!0),s.value.length>0?((0,n.uX)(),(0,n.CE)("div",Sa,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(s.value,(e=>(0,n.bo)(((0,n.uX)(),(0,n.CE)("div",{key:e.layerId,class:"h-100"},[(0,n.Lk)("div",Ma,[(0,n.Lk)("div",Ra,[(0,n.Lk)("table",Aa,[(0,n.Lk)("thead",_a,[(0,n.Lk)("tr",Va,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(p(e),(t=>((0,n.uX)(),(0,n.CE)(n.FK,{key:t},["color"!==t?((0,n.uX)(),(0,n.CE)("th",{key:0,onClick:a=>y(e.layerId,t),class:"my-bgcolor-white-hover p-1 my-cursor-pointer"},[(0,n.Lk)("span",Ha,(0,g.v_)(t),1),(0,n.Lk)("span",Wa,[(0,n.Lk)("i",{class:(0,g.C4)(f(e.layerId,t))},null,2)])],8,Ja)):(0,n.Q3)("",!0)],64)))),128))])]),(0,n.Lk)("tbody",null,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(m(e),(t=>((0,n.uX)(),(0,n.CE)("tr",{key:t.id,class:"my-table-tr-hover text-center text-nowrap border-bottom my-cursor-pointer",onClick:a=>h(t,e)},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(p(e),(e=>((0,n.uX)(),(0,n.CE)(n.FK,{key:e},["color"!==e?((0,n.uX)(),(0,n.CE)("td",Ba,["#"===e?((0,n.uX)(),(0,n.CE)("div",Xa,[(0,n.Lk)("div",{style:(0,g.Tr)([{"min-width":"6px"},{backgroundColor:t["color"]}])},null,4),(0,n.Lk)("div",Ka,(0,g.v_)(t[e]),1)])):((0,n.uX)(),(0,n.CE)("div",Ua,(0,g.v_)(t[e]),1))])):(0,n.Q3)("",!0)],64)))),128))],8,ja)))),128))])])])])])),[[o.aG,r.value===e.layerId]]))),128))])):((0,n.uX)(),(0,n.CE)("div",Ga,t[0]||(t[0]=[(0,n.Lk)("div",{class:"text-center"},[(0,n.Lk)("div",{class:"my-title-md-gray p-3"},"沒有開啟的圖層")],-1)])))]))}};const Ya=(0,p.A)(Qa,[["__scopeId","data-v-398b5856"]]);var qa=Ya,Za={name:"BottomView",components:{DataTableTab:qa},props:{activeBottomTab:{type:String,default:"table"},bottomViewHeight:{type:Number,default:300},isPanelDragging:{type:Boolean,default:!1}},emits:["update:activeBottomTab","highlight-on-map","reset-view"],setup(e){const t=(0,c.KR)(null);return(0,n.wB)((()=>e.activeBottomTab),(()=>{(0,n.dY)((()=>{console.log(`✅ 底部分頁已切換至: ${e.activeBottomTab}`)}))})),{bottomTabContentRef:t}}};const eo=(0,p.A)(Za,[["render",Ta]]);var to=eo;const ao={class:"d-flex flex-column overflow-hidden h-100"};var oo={__name:"MiddleView",props:{activeUpperTab:{type:String,default:"map"},activeBottomTab:{type:String,default:"table"},mainPanelWidth:{type:Number,default:60},dynamicMainAreaHeight:{type:Number,default:500},showTainanLayer:{type:Boolean,default:!1},selectedFilter:{type:String,default:""},zoomLevel:{type:Number,default:11},currentCoords:{type:Object,default:()=>({lat:25.033,lng:121.5654})},activeMarkers:{type:Number,default:0},isSidePanelDragging:{type:Boolean,default:!1}},emits:["update:activeUpperTab","update:activeBottomTab","update:zoomLevel","update:currentCoords","update:activeMarkers","update:tableSearchQuery","sort-table","highlight-on-map","reset-view"],setup(e,{expose:t}){const a=e,o=(0,c.KR)(null),l=(0,c.KR)(30),r=(0,c.KR)(!1),i=(0,n.EW)((()=>a.isSidePanelDragging||r.value)),s=(0,n.EW)((()=>{const e=a.dynamicMainAreaHeight;return console.log(`🔧 MiddleView: middleSectionTotalHeight (from prop): ${e}`),Math.max(e,0)})),u=(0,n.EW)((()=>{const e=l.value/100*s.value;return console.log(`🔧 MiddleView: actualBottomViewPixelHeight calculated: ${e} (percent: ${l.value}%, totalMiddle: ${s.value})`),e})),p=(0,n.EW)((()=>{const e=s.value-u.value;return console.log(`🔧 MiddleView: contentHeight (for MainContent) calculated: ${e}, totalMiddle: ${s.value}, bottomViewPx: ${u.value}`),e})),d=e=>{e.preventDefault(),e.stopPropagation(),r.value=!0,document.body.classList.add("my-no-select");const t=e.clientY,a=l.value,o=s.value,n=e=>{e.preventDefault();const n=e.clientY-t;if(0===o)return;const r=n/o*100;let i=a-r;i=Math.max(0,Math.min(100,i)),l.value=Math.round(10*i)/10},i=()=>{r.value=!1,document.body.classList.remove("my-no-select"),document.removeEventListener("mousemove",n),document.removeEventListener("mouseup",i)};document.addEventListener("mousemove",n),document.addEventListener("mouseup",i)};(0,n.wB)((()=>a.activeUpperTab),((e,t)=>{console.log(`🔧 MiddleView Watcher: activeUpperTab changed from "${t}" to "${e}". Current bottomViewHeightPercent: ${l.value}%`)})),(0,n.sV)((()=>{console.log("🚀 MiddleView mounted")})),(0,n.hi)((()=>{console.log("🗑️ MiddleView unmounted")}));const m=e=>{o.value?(console.log("🎯 MiddleView: 呼叫 highlightFeature",e),o.value.highlightFeature(e)):console.warn("⚠️ 無法高亮顯示：mainContentRef 未定義")},y=()=>{o.value&&(console.log("🗺️ MiddleView: 呼叫 fitToTainanBounds"),o.value.fitToTainanBounds())},f=()=>{o.value&&(console.log("🔄 MiddleView: 呼叫 resetMapTab"),o.value.resetView())},h=()=>{o.value&&(console.log("📏 MiddleView: 呼叫地圖尺寸刷新"),o.value.invalidateMapSize())},v=()=>{o.value&&(console.log("🛑 MiddleView: 停止地圖點擊模式"),o.value.stopMapClickMode())};return t({highlightFeature:m,fitToTainanBounds:y,resetMapTab:f,invalidateMapSize:h,stopMapClickMode:v}),(t,a)=>((0,n.uX)(),(0,n.CE)("div",ao,[(0,n.Lk)("div",{style:(0,g.Tr)({pointerEvents:i.value?"none":"auto",height:p.value+"px",overflow:"hidden"})},[(0,n.bF)(ka,{ref_key:"mainContentRef",ref:o,activeUpperTab:e.activeUpperTab,mainPanelWidth:e.mainPanelWidth,contentHeight:p.value,showTainanLayer:e.showTainanLayer,selectedFilter:e.selectedFilter,zoomLevel:e.zoomLevel,isPanelDragging:i.value,activeMarkers:e.activeMarkers,"onUpdate:activeUpperTab":a[0]||(a[0]=e=>t.$emit("update:activeUpperTab",e)),"onUpdate:zoomLevel":a[1]||(a[1]=e=>t.$emit("update:zoomLevel",e)),"onUpdate:currentCoords":a[2]||(a[2]=e=>t.$emit("update:currentCoords",e)),"onUpdate:activeMarkers":a[3]||(a[3]=e=>t.$emit("update:activeMarkers",e)),onFeatureSelected:a[4]||(a[4]=e=>t.$emit("feature-selected",e)),onOpenDistanceModal:a[5]||(a[5]=(e,a)=>t.$emit("open-distance-modal",e,a)),onOpenIsochroneModal:a[6]||(a[6]=(e,a)=>t.$emit("open-isochrone-modal",e,a))},null,8,["activeUpperTab","mainPanelWidth","contentHeight","showTainanLayer","selectedFilter","zoomLevel","isPanelDragging","activeMarkers"])],4),(0,n.Lk)("div",{class:(0,g.C4)(["my-resizer my-resizer-horizontal my-resizer-middle",{"my-dragging":r.value}]),onMousedown:d,title:"拖曳調整底部面板高度"},null,34),(0,n.Lk)("div",{class:"overflow-hidden",style:(0,g.Tr)({pointerEvents:i.value?"none":"auto",height:u.value+"px"})},[(0,n.bF)(to,{activeBottomTab:e.activeBottomTab,bottomViewHeight:u.value,isPanelDragging:i.value,"onUpdate:activeBottomTab":a[7]||(a[7]=e=>t.$emit("update:activeBottomTab",e)),onHighlightOnMap:a[8]||(a[8]=e=>t.$emit("highlight-on-map",e)),onResetView:a[9]||(a[9]=e=>t.$emit("reset-view"))},null,8,["activeBottomTab","bottomViewHeight","isPanelDragging"])],4)]))}};const lo=oo;var no=lo;const ro={class:"d-flex flex-column h-100 my-bgcolor-gray-200"},io={class:"flex-grow-1 overflow-hidden",style:{"padding-bottom":"70px"}},so={class:"h-100"},co={class:"h-100"},uo={class:"h-100"},po=["onClick"],mo={class:"d-flex flex-column align-items-center justify-content-center w-100"},yo={class:"my-font-size-sm"},go={class:"my-font-size-xs"};function fo(e,t,a,l,r,i){const s=(0,n.g2)("LayersTab"),c=(0,n.g2)("DataTableTab"),u=(0,n.g2)("PropertiesTab");return(0,n.uX)(),(0,n.CE)("div",ro,[(0,n.Lk)("div",io,[(0,n.bo)((0,n.Lk)("div",so,[(0,n.bF)(s)],512),[[o.aG,"layers"===a.activeTab]]),(0,n.bo)((0,n.Lk)("div",co,[(0,n.bF)(c,{onHighlightOnMap:t[0]||(t[0]=t=>e.$emit("highlight-on-map",t))})],512),[[o.aG,"table"===a.activeTab]]),(0,n.bo)((0,n.Lk)("div",uo,[(0,n.bF)(u,{onHighlightFeature:t[1]||(t[1]=t=>e.$emit("highlight-feature",t))})],512),[[o.aG,"properties"===a.activeTab]])]),(0,n.Lk)("div",{class:"position-fixed bottom-0 start-0 end-0 d-flex align-items-center justify-content-between my-bgcolor-gray-200 border-top z-100 w-100",style:(0,g.Tr)(l.getBottomNavStyle)},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(l.availableTabs,(e=>((0,n.uX)(),(0,n.CE)("button",{key:e.id,class:(0,g.C4)(["d-flex rounded-3 border-0 flex-grow-1 py-2 mx-1",{"my-btn-transparent":a.activeTab!==e.id,"my-btn-blue":a.activeTab===e.id}]),style:{"min-height":"44px","touch-action":"manipulation","-webkit-appearance":"none !important"},onClick:t=>l.switchTab(e.id)},[(0,n.Lk)("div",mo,[(0,n.Lk)("span",yo,[(0,n.Lk)("i",{class:(0,g.C4)([e.icon,"mb-1"])},null,2)]),(0,n.Lk)("span",go,(0,g.v_)(e.name),1)])],10,po)))),128))],4)])}var ho={name:"ResponsiveLowerView",components:{LayersTab:Je,DataTableTab:qa,PropertiesTab:xt},props:{activeTab:{type:String,default:"layers"},activeRightTab:{type:String,default:"properties"},activeBottomTab:{type:String,default:"table"}},emits:["update:activeTab","update:activeRightTab","update:activeBottomTab","highlight-on-map","highlight-feature"],setup(e,{emit:t}){const a=(0,c.KR)(0),o=(0,n.EW)((()=>[{id:"layers",name:"圖層",icon:"fas fa-layer-group"},{id:"table",name:"資料表",icon:"fas fa-table"},{id:"properties",name:"屬性",icon:"fa-solid fa-location-dot"}])),l=()=>{const e=window.innerHeight,t=window.visualViewport?.height||e,o=e-t;a.value=o>0?o:0},r=(0,n.EW)((()=>{const e=60,t=a.value>0?a.value+10:10;return{"min-height":`${e}px`,height:`${e+t}px`,padding:`8px 4px ${t}px 4px`}})),i=e=>{t("update:activeTab",e)};return(0,n.sV)((()=>{l(),window.addEventListener("resize",l),window.visualViewport&&(window.visualViewport.addEventListener("resize",l),window.visualViewport.addEventListener("scroll",l)),window.addEventListener("orientationchange",(()=>{setTimeout(l,300)}))})),(0,n.hi)((()=>{window.removeEventListener("resize",l),window.visualViewport&&(window.visualViewport.removeEventListener("resize",l),window.visualViewport.removeEventListener("scroll",l)),window.removeEventListener("orientationchange",l)})),{availableTabs:o,switchTab:i,getBottomNavStyle:r,bottomSafeArea:a}}};const vo=(0,p.A)(ho,[["render",fo]]);var bo=vo,wo={name:"HomeView",components:{LoadingOverlay:fe,LeftView:je,RightView:kt,MiddleView:no,UpperView:ka,ResponsiveLowerView:bo},setup(){const e=le(),t=(0,c.KR)([]),a=(0,c.KR)(null),o=(0,c.KR)(null),l=(0,c.KR)(null),r=(0,c.KR)("map"),i=(0,c.KR)("table"),s=(0,c.KR)("properties"),u=(0,c.KR)("layers"),p=5,d=(0,c.KR)(20),m=(0,c.KR)(20),y=(0,c.KR)(window.innerWidth),g=(0,c.KR)(window.innerHeight),f=(0,c.KR)(0),h=(0,n.EW)((()=>`${d.value}%`)),v=(0,n.EW)((()=>`${m.value}%`)),b=(0,n.EW)((()=>100-d.value-m.value)),w=(0,n.EW)((()=>`${b.value}%`)),D=(0,n.EW)((()=>g.value-f.value)),x=(0,c.KR)("載入中..."),L=(0,c.KR)(0),C=(0,c.KR)(!1),k=(0,c.KR)(""),N=(0,n.EW)((()=>e.getAllLayers().some((e=>e.isLoading))));(0,n.wB)(N,(t=>{if(t){const t=e.getAllLayers().find((e=>e.isLoading));x.value=`載入 ${t.layerName} 數據中...`,k.value="正在處理地理資訊..."}else x.value="載入完成",k.value="數據已更新"}),{deep:!0});const I=(0,n.EW)((()=>e.findLayerById("tainan")?.visible||!1)),T=(0,c.KR)(null),$=(0,c.KR)(11),E=(0,c.KR)({lat:25.033,lng:121.5654}),F=(0,c.KR)(0),O=(0,c.KR)(!1),z=(0,c.KR)(!1),P=(0,c.KR)({lat:0,lng:0}),S=(0,c.KR)(""),M=(0,c.KR)(!1),R=(0,c.KR)({lat:0,lng:0}),A=(0,c.KR)(""),_=()=>{a.value&&a.value.resetMapTab()},V=(e,t)=>{t.preventDefault(),t.stopPropagation(),O.value=!0,document.body.classList.add("my-no-select");const a=t.clientX,o=d.value,l=m.value,n=y.value;console.log(`🔧 開始調整 ${e} 方向，初始值:`,{leftWidth:o,rightWidth:l});const r=t=>{t.preventDefault();const r=t.clientX-a,i=r/n*100;if("left"===e){let e=o+i;e=Math.max(p,Math.min(100-m.value,e)),d.value=e}else if("right"===e){let e=l-i;e=Math.max(0,Math.min(100-d.value,e)),m.value=e}},i=()=>{O.value=!1,document.body.classList.remove("my-no-select"),document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",i),J(),console.log("✅ 拖曳調整完成，最終值:",{leftWidth:d.value,rightWidth:m.value,mainWidth:b.value})};document.addEventListener("mousemove",r),document.addEventListener("mouseup",i)},J=()=>{d.value=Math.max(p,Math.min(100,d.value)),m.value=Math.max(0,Math.min(100,m.value)),d.value=Math.round(10*d.value)/10,m.value=Math.round(10*m.value)/10},H=(e,t)=>{console.log("🔍 openDistanceModal 被調用:",{lat:e,lng:t}),P.value={lat:e,lng:t},S.value="2",z.value=!0,console.log("🔍 Modal 狀態已設定:",{showDistanceModal:z.value,distanceInput:S.value,distanceModalPosition:P.value})},W=()=>{console.log("🔍 handleDistanceConfirm 被調用");const t=parseFloat(S.value);if(console.log("🔍 解析的距離:",t),console.log("🔍 當前座標:",P.value),t&&t>0){const n=1e3*t;console.log("🔍 轉換為米:",n);try{const t=e.addAnalysisPoint(P.value.lat,P.value.lng,n);console.log("🔍 addAnalysisPoint 結果:",t)}catch(l){console.error("❌ addAnalysisPoint 錯誤:",l)}z.value=!1,a.value&&a.value.stopClickMode?(console.log("🔍 調用 middlePanelRef.stopClickMode"),a.value.stopClickMode()):o.value&&o.value.stopClickMode?(console.log("🔍 調用 mobileUpperViewRef.stopClickMode"),o.value.stopClickMode()):console.warn("⚠️ 無法找到 stopClickMode 方法")}else console.warn("⚠️ 距離無效:",t)},j=()=>{z.value=!1},B=(e,t)=>{console.log("🔍 openIsochroneModal 被調用:",{lat:e,lng:t}),R.value={lat:e,lng:t},A.value="15",M.value=!0,console.log("🔍 等時分析 Modal 狀態已設定:",{showIsochroneModal:M.value,isochroneInput:A.value,isochroneModalPosition:R.value})},X=()=>{console.log("🔍 handleIsochroneConfirm 被調用");const t=parseFloat(A.value);if(console.log("🔍 解析的車程時間:",t),console.log("🔍 當前座標:",R.value),t&&t>0){try{const a=e.addIsochroneAnalysisPoint(R.value.lat,R.value.lng,t);console.log("🔍 addIsochroneAnalysisPoint 結果:",a)}catch(l){console.error("❌ addIsochroneAnalysisPoint 錯誤:",l)}M.value=!1,a.value&&a.value.stopIsochroneClickMode?(console.log("🔍 調用 middlePanelRef.stopIsochroneClickMode"),a.value.stopIsochroneClickMode()):o.value&&o.value.stopIsochroneClickMode?(console.log("🔍 調用 mobileUpperViewRef.stopIsochroneClickMode"),o.value.stopIsochroneClickMode()):console.warn("⚠️ 無法找到 stopIsochroneClickMode 方法")}else console.warn("⚠️ 車程時間無效:",t)},K=()=>{M.value=!1},U=()=>{const e=y.value,t=e>=1200;y.value=window.innerWidth,g.value=window.innerHeight;const r=window.innerWidth>=1200;t!==r?(console.log("🔄 HomeView: 響應式斷點切換 "+(t?"桌面版→響應式":"響應式→桌面版")),oe()):(0,n.dY)((()=>{setTimeout((()=>{r&&a.value?a.value.invalidateMapSize&&a.value.invalidateMapSize():!r&&o.value&&o.value.invalidateMapSize&&o.value.invalidateMapSize()}),100)})),(0,n.dY)((()=>{if(l.value&&window.innerWidth>=1200?f.value=l.value.offsetHeight:f.value=0,!r){const e=q();Z.value<e&&(Z.value=Math.round(e),console.log(`🔧 HomeView: 視窗大小變化，調整底部面板最小高度至 ${Z.value}vh`))}}))};(0,n.sV)((()=>{console.log("🚀 空間分析平台已初始化"),window.addEventListener("resize",U),(0,n.dY)((()=>{l.value&&window.innerWidth>=1200?f.value=l.value.offsetHeight:f.value=0})),window.ResizeObserver&&(ne=new ResizeObserver((e=>{for(let t of e){const{width:e}=t.contentRect,a=e>=1200,o=t.target.classList.contains("xl-and-above");a!==o&&(t.target.classList.toggle("xl-and-above",a),oe())}})),ne.observe(document.body))}));const G=e=>{F.value=e},Q=t=>{console.log("HomeView - handleFeatureSelected called with:",{feature:t,properties:t.properties,store:e}),e.setSelectedFeature(t),console.log("HomeView - After setting selectedFeature:",{storeSelectedFeature:e.selectedFeature});const a=window.innerWidth>=1200;a?s.value="properties":(u.value="properties",Z.value<30&&(Z.value=40))},Y=e=>{console.log("🎯 HomeView 處理高亮顯示:",e),"map"!==r.value&&(r.value="map"),(0,n.dY)((()=>{const t=window.innerWidth>=1200;t?a.value?a.value.highlightFeature(e):console.error("❌ 無法高亮顯示: middlePanelRef 不可用"):o.value?o.value.highlightFeature(e):console.error("❌ 無法高亮顯示: mobileUpperViewRef 不可用")}))},q=()=>{const e=100,t=window.innerHeight;return Math.max(10,e/t*100)},Z=(0,c.KR)(Math.max(40,q())),ee=(0,c.KR)(!1),te=(0,c.KR)(0),ae=e=>{e.preventDefault(),e.stopPropagation(),ee.value=!0,document.body.classList.add("my-no-select");const t=e.type.startsWith("touch"),a=t?e.touches[0].clientY:e.clientY,o=a,l=Z.value,n=window.innerHeight;console.log("🔧 HomeView - 開始垂直調整",{startY:o,startBottomHeight:l,windowHeight:n,isTouch:t});const r=e=>{e.preventDefault();const t=e.type.startsWith("touch")?e.touches[0].clientY:e.clientY,a=t-o,r=a/n*100;let i=l-r;const s=q();i=Math.max(s,Math.min(100,i)),Z.value=Math.round(i)},i=()=>{ee.value=!1,document.body.classList.remove("my-no-select"),document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",i),document.removeEventListener("touchmove",r),document.removeEventListener("touchend",i),document.removeEventListener("touchcancel",i),console.log("🔧 HomeView - 垂直調整結束",{finalHeight:Z.value})};t?(document.addEventListener("touchmove",r,{passive:!1}),document.addEventListener("touchend",i),document.addEventListener("touchcancel",i)):(document.addEventListener("mousemove",r),document.addEventListener("mouseup",i))};(0,n.wB)(g,(()=>{setTimeout((()=>{te.value+=1}),100)}));const oe=()=>{console.log("🔄 HomeView: 螢幕尺寸跨越斷點，重新初始化地圖"),te.value+=1,(0,n.dY)((()=>{setTimeout((()=>{const e=window.innerWidth>=1200;e?a.value&&(console.log("🖥️ HomeView: 切換到桌面版，處理 MiddleView 地圖"),a.value.invalidateMapSize&&a.value.invalidateMapSize(),setTimeout((()=>{const e=new Event("resize");window.dispatchEvent(e)}),100)):o.value&&(console.log("📱 HomeView: 切換到響應式版本，處理 UpperView 地圖"),o.value.invalidateMapSize&&o.value.invalidateMapSize())}),300)}))};let ne=null;return(0,n.hi)((()=>{window.removeEventListener("resize",U),ne&&ne.disconnect()})),{middlePanelRef:a,activeUpperTab:r,activeBottomTab:i,activeRightTab:s,activeLowerTab:u,isAnyLayerLoading:N,loadingText:x,loadingProgress:L,showLoadingProgress:C,loadingSubText:k,showTainanLayer:I,selectedFilter:T,zoomLevel:$,currentCoords:E,activeMarkers:F,leftViewWidth:d,rightViewWidth:m,leftViewWidthPx:h,rightViewWidthPx:v,mainPanelWidth:b,mainPanelWidthPx:w,tableData:t,resetView:_,startResize:V,startVerticalResize:ae,isSidePanelDragging:O,isVerticalDragging:ee,mobileBottomViewHeight:Z,mobileMapKey:te,validatePanelSizes:J,appFooterRef:l,mobileUpperViewRef:o,calculatedMiddleViewHeight:D,handleHighlight:Y,updateActiveMarkers:G,handleFeatureSelected:Q,showDistanceModal:z,distanceModalPosition:P,distanceInput:S,openDistanceModal:H,handleDistanceConfirm:W,handleDistanceCancel:j,showIsochroneModal:M,isochroneModalPosition:R,isochroneInput:A,openIsochroneModal:B,handleIsochroneConfirm:X,handleIsochroneCancel:K}}};const Do=(0,p.A)(wo,[["render",S]]);var xo=Do;const Lo=[{path:"/",name:"Home",component:xo}],Co=(0,y.aE)({history:(0,y.LA)("/long-term-care-web/"),routes:Lo});var ko=Co;a(323);console.log("🎨 樣式文件載入完成");const No=(0,o.Ef)(m),Io=(0,l.Ey)();No.use(ko),No.use(Io),No.mount("#app"),console.log("🚀 空間分析視覺化平台已啟動"),console.log("📦 Pinia 狀態管理已初始化"),console.log("🗺️ Vue Router 路由系統已就緒"),console.log("🎨 Bootstrap 5 UI 框架已載入"),console.log("🗺️ Leaflet 地圖庫已準備就緒"),console.log("🔤 Font Awesome 圖示庫已載入")}},t={};function a(o){var l=t[o];if(void 0!==l)return l.exports;var n=t[o]={exports:{}};return e[o].call(n.exports,n,n.exports,a),n.exports}a.m=e,function(){var e=[];a.O=function(t,o,l,n){if(!o){var r=1/0;for(u=0;u<e.length;u++){o=e[u][0],l=e[u][1],n=e[u][2];for(var i=!0,s=0;s<o.length;s++)(!1&n||r>=n)&&Object.keys(a.O).every((function(e){return a.O[e](o[s])}))?o.splice(s--,1):(i=!1,n<r&&(r=n));if(i){e.splice(u--,1);var c=l();void 0!==c&&(t=c)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[o,l,n]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={524:0};a.O.j=function(t){return 0===e[t]};var t=function(t,o){var l,n,r=o[0],i=o[1],s=o[2],c=0;if(r.some((function(t){return 0!==e[t]}))){for(l in i)a.o(i,l)&&(a.m[l]=i[l]);if(s)var u=s(a)}for(t&&t(o);c<r.length;c++)n=r[c],a.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return a.O(u)},o=self["webpackChunklong_term_care_web"]=self["webpackChunklong_term_care_web"]||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var o=a.O(void 0,[504],(function(){return a(1407)}));o=a.O(o)})();
//# sourceMappingURL=app.d8f3cc5d.js.map